@generated

Errpy makes empty AST (weird) with input prior to and including:
2.->def<-

4.->def f<-

5.->def fi<-

6.->def fib<-

7.->def fib(<-

8.->def fib(a<-

9.->def fib(a:<-

11.->def fib(a: i<-

12.->def fib(a: in<-

13.->def fib(a: int<-

14.->def fib(a: int)<-

16.->def fib(a: int) -<-

17.->def fib(a: int) -><-

19.->def fib(a: int) -> i<-

20.->def fib(a: int) -> in<-

21.->def fib(a: int) -> int<-

34.->ib(a: int) -> int:
    tmp = (<-

36.->(a: int) -> int:
    tmp = (a,<-

45.->-> int:
    tmp = (a, a)
    (<-

48.->int:
    tmp = (a, a)
    (ba,<-

77.->, bb) = tmp
    inset = a in {<-

79.->bb) = tmp
    inset = a in {0,<-

187.->
    else:
        return fib(<-

200.->      return fib(a - 1) + fib(<-

301.->) -> str:
    return ','.join(<-

302.-> -> str:
    return ','.join([<-

382.->C_STRING"""
    somethingelse(<-

392.->"
    somethingelse()
    fib(<-

426.->    astring = format_a_string(<-

477.->ame__ == '__main__':
    main(<-
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

0. Input. char of interest: 'd':

Input:| ERRPY 
------| ------
d     | d     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
1. Input. char of interest: 'e':

Input: | ERRPY R
-------| -------
de     | de     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
2. Input. char of interest: 'f':

Input:  | ERRPY Re
--------| --------
def     |         


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def

===============================================================================
4. Input. char of interest: 'f':

Input:    | ERRPY Reco
----------| ----------
def f     |           


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def f

===============================================================================
5. Input. char of interest: 'i':

Input:     | ERRPY Recov
-----------| -----------
def fi     |            


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fi

===============================================================================
6. Input. char of interest: 'b':

Input:      | ERRPY Recove
------------| ------------
def fib     |             


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib

===============================================================================
7. Input. char of interest: '(':

Input:       | ERRPY Recover
-------------| -------------
def fib(     |              


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(

===============================================================================
8. Input. char of interest: 'a':

Input:        | ERRPY Recovere
--------------| --------------
def fib(a     |               


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a

===============================================================================
9. Input. char of interest: ':':

Input:         | ERRPY Recovered
---------------| ---------------
def fib(a:     |                


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a:

===============================================================================
11. Input. char of interest: 'i':

Input:           | ERRPY Recovered A
-----------------| -----------------
def fib(a: i     |                  


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: i

===============================================================================
12. Input. char of interest: 'n':

Input:            | ERRPY Recovered AS
------------------| ------------------
def fib(a: in     |                   


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: in

===============================================================================
13. Input. char of interest: 't':

Input:             | ERRPY Recovered AST
-------------------| -------------------
def fib(a: int     |                    


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int

===============================================================================
14. Input. char of interest: ')':

Input:              | ERRPY Recovered AST:
--------------------| --------------------
def fib(a: int)     |                     


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int)

===============================================================================
16. Input. char of interest: '-':

Input:                | ERRPY Recovered AST:  
----------------------| ----------------------
def fib(a: int) -     |                       


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int) -

===============================================================================
17. Input. char of interest: '>':

Input:                 | ERRPY Recovered AST:   
-----------------------| -----------------------
def fib(a: int) ->     |                        


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int) ->

===============================================================================
19. Input. char of interest: 'i':

Input:                   | ERRPY Recovered AST:     
-------------------------| -------------------------
def fib(a: int) -> i     |                          


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int) -> i

===============================================================================
20. Input. char of interest: 'n':

Input:                    | ERRPY Recovered AST:      
--------------------------| --------------------------
def fib(a: int) -> in     |                           


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int) -> in

===============================================================================
21. Input. char of interest: 't':

Input:                     | ERRPY Recovered AST:       
---------------------------| ---------------------------
def fib(a: int) -> int     |                            


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int) -> int

===============================================================================
22. Input. char of interest: ':':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
23. Input. char of interest: '\n':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1 +1 @@
-def fib(a: int) -> int:+def fib(a: int) -> int:


===============================================================================
28. Input. char of interest: 't':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    t                       |     t                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
29. Input. char of interest: 'm':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tm                      |     tm                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
30. Input. char of interest: 'p':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp                     |     tmp                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
32. Input. char of interest: '=':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp =                   | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1 +1,2 @@
-def fib(a: int) -> int:+def fib(a: int) -> int:
+    tmp =

===============================================================================
34. Input. char of interest: '(':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     |                             
    tmp = (                 | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,2 @@
+def fib(a: int) -> int:
+    tmp = (

===============================================================================
35. Input. char of interest: 'a':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a                | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1 +1,2 @@
-def fib(a: int) -> int:+def fib(a: int) -> int:
+    tmp = (a

===============================================================================
36. Input. char of interest: ',':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     |                             
    tmp = (a,               | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,2 @@
+def fib(a: int) -> int:
+    tmp = (a,

===============================================================================
38. Input. char of interest: 'a':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1 +1,2 @@
-def fib(a: int) -> int:+def fib(a: int) -> int:
+    tmp = (a, a

===============================================================================
39. Input. char of interest: ')':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
40. Input. char of interest: '\n':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,2 +1,2 @@
 def fib(a: int) -> int:
-    tmp = (a, a)+    tmp = (a, a)


===============================================================================
45. Input. char of interest: '(':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     |                             
    tmp = (a, a)            | 
    (                       | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,3 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    (

===============================================================================
46. Input. char of interest: 'b':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (b                      | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,2 +1,3 @@
 def fib(a: int) -> int:
-    tmp = (a, a)+    tmp = (a, a)
+    (b

===============================================================================
47. Input. char of interest: 'a':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba                     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,2 +1,3 @@
 def fib(a: int) -> int:
-    tmp = (a, a)+    tmp = (a, a)
+    (ba

===============================================================================
48. Input. char of interest: ',':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     |                             
    tmp = (a, a)            | 
    (ba,                    | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,3 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    (ba,

===============================================================================
50. Input. char of interest: 'b':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, b                  | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,2 +1,3 @@
 def fib(a: int) -> int:
-    tmp = (a, a)+    tmp = (a, a)
+    (ba, b

===============================================================================
51. Input. char of interest: 'b':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb                 | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,2 +1,3 @@
 def fib(a: int) -> int:
-    tmp = (a, a)+    tmp = (a, a)
+    (ba, bb

===============================================================================
52. Input. char of interest: ')':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb)                |     (ba, bb)                


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
54. Input. char of interest: '=':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) =              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,2 +1,3 @@
 def fib(a: int) -> int:
-    tmp = (a, a)+    tmp = (a, a)
+    (ba, bb) =

===============================================================================
56. Input. char of interest: 't':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = t            |     (ba, bb) = t            


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
57. Input. char of interest: 'm':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tm           |     (ba, bb) = tm           


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
58. Input. char of interest: 'p':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
59. Input. char of interest: '\n':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,3 +1,3 @@
 def fib(a: int) -> int:
     tmp = (a, a)
-    (ba, bb) = tmp+    (ba, bb) = tmp


===============================================================================
64. Input. char of interest: 'i':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    i                       |     i                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
65. Input. char of interest: 'n':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    in                      |     in                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
66. Input. char of interest: 's':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    ins                     |     ins                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
67. Input. char of interest: 'e':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inse                    |     inse                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
68. Input. char of interest: 't':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset                   |     inset                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
70. Input. char of interest: '=':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset =                 | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,3 +1,4 @@
 def fib(a: int) -> int:
     tmp = (a, a)
-    (ba, bb) = tmp+    (ba, bb) = tmp
+    inset =

===============================================================================
72. Input. char of interest: 'a':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a               |     inset = a               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
74. Input. char of interest: 'i':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a i             |     inset = i               


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,4 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     (ba, bb) = tmp
-    inset = i+    inset = a i

===============================================================================
75. Input. char of interest: 'n':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,3 +1,4 @@
 def fib(a: int) -> int:
     tmp = (a, a)
-    (ba, bb) = tmp+    (ba, bb) = tmp
+    inset = a in

===============================================================================
77. Input. char of interest: '{':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     |                             
    tmp = (a, a)            | 
    (ba, bb) = tmp          | 
    inset = a in {          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,4 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    (ba, bb) = tmp
+    inset = a in {

===============================================================================
78. Input. char of interest: '0':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,3 +1,4 @@
 def fib(a: int) -> int:
     tmp = (a, a)
-    (ba, bb) = tmp+    (ba, bb) = tmp
+    inset = a in {0

===============================================================================
79. Input. char of interest: ',':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     |                             
    tmp = (a, a)            | 
    (ba, bb) = tmp          | 
    inset = a in {0,        | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,4 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    (ba, bb) = tmp
+    inset = a in {0,

===============================================================================
81. Input. char of interest: '1':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1      | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,3 +1,4 @@
 def fib(a: int) -> int:
     tmp = (a, a)
-    (ba, bb) = tmp+    (ba, bb) = tmp
+    inset = a in {0, 1

===============================================================================
82. Input. char of interest: '}':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
83. Input. char of interest: '\n':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     
                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,4 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     (ba, bb) = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}


===============================================================================
88. Input. char of interest: 'i':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    i                       |     i                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
89. Input. char of interest: 'f':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if                      | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     (ba, bb) = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if

===============================================================================
91. Input. char of interest: 'a':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a                    | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     (ba, bb) = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a

===============================================================================
93. Input. char of interest: '<':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <                  | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     (ba, bb) = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <

===============================================================================
94. Input. char of interest: '=':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <=                 | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     (ba, bb) = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <=

===============================================================================
96. Input. char of interest: '2':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2               | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     (ba, bb) = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2

===============================================================================
98. Input. char of interest: 'o':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2 o             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     (ba, bb) = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2 o

===============================================================================
99. Input. char of interest: 'r':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2 or            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     (ba, bb) = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2 or

===============================================================================
101. Input. char of interest: 'a':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2 or a          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     (ba, bb) = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2 or a

===============================================================================
103. Input. char of interest: '=':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2 or a =        | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     (ba, bb) = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2 or a =

===============================================================================
104. Input. char of interest: '=':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2 or a ==       | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     (ba, bb) = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2 or a ==

===============================================================================
106. Input. char of interest: '1':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    (ba, bb) = tmp          |     (ba, bb) = tmp          
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2 or a == 1     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     (ba, bb) = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2 or a == 1

===============================================================================
107. Input. char of interest: ':':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
108. Input. char of interest: '\n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -2,4 +2,4 @@
     tmp = (a, a)
     (ba, bb) = tmp
     inset = a in {0, 1}
-    if a <= 2 or a == 1:+    if a <= 2 or a == 1:


===============================================================================
117. Input. char of interest: 'r':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        r                    |         r                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
118. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        re                   |         re                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
119. Input. char of interest: 't':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        ret                  |         ret                  


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
120. Input. char of interest: 'u':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        retu                 |         retu                 


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
121. Input. char of interest: 'r':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        retur                |         retur                


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
122. Input. char of interest: 'n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return               |         return               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
124. Input. char of interest: '1':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
125. Input. char of interest: '\n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,4 @@
     (ba, bb) = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1


===============================================================================
130. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    e                        |     e                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
131. Input. char of interest: 'l':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    el                       |     el                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
132. Input. char of interest: 'i':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    eli                      |     eli                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
133. Input. char of interest: 'f':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif                     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,5 @@
     (ba, bb) = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1
+    elif

===============================================================================
135. Input. char of interest: 'i':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif i                   | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,5 @@
     (ba, bb) = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1
+    elif i

===============================================================================
136. Input. char of interest: 'n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif in                  | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,5 @@
     (ba, bb) = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1
+    elif in

===============================================================================
137. Input. char of interest: 's':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif ins                 | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,5 @@
     (ba, bb) = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1
+    elif ins

===============================================================================
138. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inse                | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,5 @@
     (ba, bb) = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1
+    elif inse

===============================================================================
139. Input. char of interest: 't':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset               | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,5 @@
     (ba, bb) = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1
+    elif inset

===============================================================================
140. Input. char of interest: ':':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
141. Input. char of interest: '\n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -4,4 +4,4 @@
     inset = a in {0, 1}
     if a <= 2 or a == 1:
         return 1
-    elif inset:+    elif inset:


===============================================================================
150. Input. char of interest: 'r':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        r                    |         r                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
151. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        re                   |         re                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
152. Input. char of interest: 't':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        ret                  |         ret                  


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
153. Input. char of interest: 'u':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        retu                 |         retu                 


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
154. Input. char of interest: 'r':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        retur                |         retur                


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
155. Input. char of interest: 'n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return               |         return               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
157. Input. char of interest: '1':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
158. Input. char of interest: '\n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,4 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1


===============================================================================
163. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    e                        |     e                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
164. Input. char of interest: 'l':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    el                       |     el                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
165. Input. char of interest: 's':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    els                      |     els                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
166. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else                     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,5 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else

===============================================================================
167. Input. char of interest: ':':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,5 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:

===============================================================================
168. Input. char of interest: '\n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    | 
                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,5 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:


===============================================================================
177. Input. char of interest: 'r':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        r                    |         r                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
178. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        re                   |         re                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
179. Input. char of interest: 't':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        ret                  |         ret                  


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
180. Input. char of interest: 'u':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        retu                 |         retu                 


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
181. Input. char of interest: 'r':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        retur                |         retur                


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
182. Input. char of interest: 'n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        return               |         return               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
184. Input. char of interest: 'f':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        return f             |         return f             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
185. Input. char of interest: 'i':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        return fi            |         return fi            


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
186. Input. char of interest: 'b':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        return fib           |         return fib           


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
187. Input. char of interest: '(':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      |                              
    tmp = (a, a)             | 
    (ba, bb) = tmp           | 
    inset = a in {0, 1}      | 
    if a <= 2 or a == 1:     | 
        return 1             | 
    elif inset:              | 
        return 1             | 
    else:                    | 
        return fib(          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,10 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    (ba, bb) = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(

===============================================================================
188. Input. char of interest: 'a':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    | 
        return fib(a         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a

===============================================================================
190. Input. char of interest: '-':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    | 
        return fib(a -       | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a -

===============================================================================
192. Input. char of interest: '1':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    (ba, bb) = tmp           |     (ba, bb) = tmp           
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    | 
        return fib(a - 1     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a - 1

===============================================================================
193. Input. char of interest: ')':

Input:                        | ERRPY Recovered AST:          
------------------------------| ------------------------------
def fib(a: int) -> int:       | def fib(a: int) -> int:       
    tmp = (a, a)              |     tmp = (a, a)              
    (ba, bb) = tmp            |     (ba, bb) = tmp            
    inset = a in {0, 1}       |     inset = a in {0, 1}       
    if a <= 2 or a == 1:      |     if a <= 2 or a == 1:      
        return 1              |         return 1              
    elif inset:               |     elif inset:               
        return 1              |         return 1              
    else:                     |     else:                     
        return fib(a - 1)     |         return fib(a - 1)     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
195. Input. char of interest: '+':

Input:                          | ERRPY Recovered AST:            
--------------------------------| --------------------------------
def fib(a: int) -> int:         | def fib(a: int) -> int:         
    tmp = (a, a)                |     tmp = (a, a)                
    (ba, bb) = tmp              |     (ba, bb) = tmp              
    inset = a in {0, 1}         |     inset = a in {0, 1}         
    if a <= 2 or a == 1:        |     if a <= 2 or a == 1:        
        return 1                |         return 1                
    elif inset:                 |     elif inset:                 
        return 1                |         return 1                
    else:                       | 
        return fib(a - 1) +     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a - 1) +

===============================================================================
197. Input. char of interest: 'f':

Input:                            | ERRPY Recovered AST:              
----------------------------------| ----------------------------------
def fib(a: int) -> int:           | def fib(a: int) -> int:           
    tmp = (a, a)                  |     tmp = (a, a)                  
    (ba, bb) = tmp                |     (ba, bb) = tmp                
    inset = a in {0, 1}           |     inset = a in {0, 1}           
    if a <= 2 or a == 1:          |     if a <= 2 or a == 1:          
        return 1                  |         return 1                  
    elif inset:                   |     elif inset:                   
        return 1                  |         return 1                  
    else:                         |     else:                         
        return fib(a - 1) + f     |         return fib(a - 1) + f     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
198. Input. char of interest: 'i':

Input:                             | ERRPY Recovered AST:               
-----------------------------------| -----------------------------------
def fib(a: int) -> int:            | def fib(a: int) -> int:            
    tmp = (a, a)                   |     tmp = (a, a)                   
    (ba, bb) = tmp                 |     (ba, bb) = tmp                 
    inset = a in {0, 1}            |     inset = a in {0, 1}            
    if a <= 2 or a == 1:           |     if a <= 2 or a == 1:           
        return 1                   |         return 1                   
    elif inset:                    |     elif inset:                    
        return 1                   |         return 1                   
    else:                          |     else:                          
        return fib(a - 1) + fi     |         return fib(a - 1) + fi     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
199. Input. char of interest: 'b':

Input:                              | ERRPY Recovered AST:                
------------------------------------| ------------------------------------
def fib(a: int) -> int:             | def fib(a: int) -> int:             
    tmp = (a, a)                    |     tmp = (a, a)                    
    (ba, bb) = tmp                  |     (ba, bb) = tmp                  
    inset = a in {0, 1}             |     inset = a in {0, 1}             
    if a <= 2 or a == 1:            |     if a <= 2 or a == 1:            
        return 1                    |         return 1                    
    elif inset:                     |     elif inset:                     
        return 1                    |         return 1                    
    else:                           |     else:                           
        return fib(a - 1) + fib     |         return fib(a - 1) + fib     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
200. Input. char of interest: '(':

Input:                               | ERRPY Recovered AST:                 
-------------------------------------| -------------------------------------
def fib(a: int) -> int:              |                                      
    tmp = (a, a)                     | 
    (ba, bb) = tmp                   | 
    inset = a in {0, 1}              | 
    if a <= 2 or a == 1:             | 
        return 1                     | 
    elif inset:                      | 
        return 1                     | 
    else:                            | 
        return fib(a - 1) + fib(     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,10 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    (ba, bb) = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(

===============================================================================
201. Input. char of interest: 'a':

Input:                                | ERRPY Recovered AST:                  
--------------------------------------| --------------------------------------
def fib(a: int) -> int:               | def fib(a: int) -> int:               
    tmp = (a, a)                      |     tmp = (a, a)                      
    (ba, bb) = tmp                    |     (ba, bb) = tmp                    
    inset = a in {0, 1}               |     inset = a in {0, 1}               
    if a <= 2 or a == 1:              |     if a <= 2 or a == 1:              
        return 1                      |         return 1                      
    elif inset:                       |     elif inset:                       
        return 1                      |         return 1                      
    else:                             | 
        return fib(a - 1) + fib(a     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a - 1) + fib(a

===============================================================================
203. Input. char of interest: '-':

Input:                                  | ERRPY Recovered AST:                    
----------------------------------------| ----------------------------------------
def fib(a: int) -> int:                 | def fib(a: int) -> int:                 
    tmp = (a, a)                        |     tmp = (a, a)                        
    (ba, bb) = tmp                      |     (ba, bb) = tmp                      
    inset = a in {0, 1}                 |     inset = a in {0, 1}                 
    if a <= 2 or a == 1:                |     if a <= 2 or a == 1:                
        return 1                        |         return 1                        
    elif inset:                         |     elif inset:                         
        return 1                        |         return 1                        
    else:                               | 
        return fib(a - 1) + fib(a -     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a - 1) + fib(a -

===============================================================================
205. Input. char of interest: '2':

Input:                                    | ERRPY Recovered AST:                      
------------------------------------------| ------------------------------------------
def fib(a: int) -> int:                   | def fib(a: int) -> int:                   
    tmp = (a, a)                          |     tmp = (a, a)                          
    (ba, bb) = tmp                        |     (ba, bb) = tmp                        
    inset = a in {0, 1}                   |     inset = a in {0, 1}                   
    if a <= 2 or a == 1:                  |     if a <= 2 or a == 1:                  
        return 1                          |         return 1                          
    elif inset:                           |     elif inset:                           
        return 1                          |         return 1                          
    else:                                 | 
        return fib(a - 1) + fib(a - 2     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2

===============================================================================
206. Input. char of interest: ')':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
207. Input. char of interest: '\n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,4 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)


===============================================================================
208. Input. char of interest: '\n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
                                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,5 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+


===============================================================================
209. Input. char of interest: 'd':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | d                                          
d                                          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -8,4 +8,5 @@
         return 1
     else:
         return fib(a - 1) + fib(a - 2)
+
 d

===============================================================================
210. Input. char of interest: 'e':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | de                                         
de                                         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -8,4 +8,5 @@
         return 1
     else:
         return fib(a - 1) + fib(a - 2)
+
 de

===============================================================================
211. Input. char of interest: 'f':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def                                        | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def

===============================================================================
213. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def s                                      | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def s

===============================================================================
214. Input. char of interest: 'o':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def so                                     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def so

===============================================================================
215. Input. char of interest: 'm':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def som                                    | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def som

===============================================================================
216. Input. char of interest: 'e':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def some                                   | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def some

===============================================================================
217. Input. char of interest: 't':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somet                                  | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somet

===============================================================================
218. Input. char of interest: 'h':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def someth                                 | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def someth

===============================================================================
219. Input. char of interest: 'i':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethi                                | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethi

===============================================================================
220. Input. char of interest: 'n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethin                               | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethin

===============================================================================
221. Input. char of interest: 'g':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def something                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def something

===============================================================================
222. Input. char of interest: 'e':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethinge                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethinge

===============================================================================
223. Input. char of interest: 'l':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethingel                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethingel

===============================================================================
224. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethingels                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethingels

===============================================================================
225. Input. char of interest: 'e':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethingelse                          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse

===============================================================================
226. Input. char of interest: '(':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethingelse(                         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse(

===============================================================================
227. Input. char of interest: ')':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethingelse()                        | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse()

===============================================================================
228. Input. char of interest: ':':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
229. Input. char of interest: '\n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
                                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -9,4 +9,4 @@
     else:
         return fib(a - 1) + fib(a - 2)
 
-def somethingelse():+def somethingelse():


===============================================================================
234. Input. char of interest: 'p':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    p                                      |     p                                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
235. Input. char of interest: 'a':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pa                                     |     pa                                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
236. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pas                                    |     pas                                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
237. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
238. Input. char of interest: '\n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,4 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass


===============================================================================
239. Input. char of interest: '\n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
                                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,5 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+


===============================================================================
240. Input. char of interest: 'd':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | d                                          
d                                          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -11,4 +11,5 @@
 
 def somethingelse():
     pass
+
 d

===============================================================================
241. Input. char of interest: 'e':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | de                                         
de                                         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -11,4 +11,5 @@
 
 def somethingelse():
     pass
+
 de

===============================================================================
242. Input. char of interest: 'f':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def                                        | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def

===============================================================================
244. Input. char of interest: 'f':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def f                                      | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def f

===============================================================================
245. Input. char of interest: 'o':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def fo                                     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def fo

===============================================================================
246. Input. char of interest: 'r':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def for                                    | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def for

===============================================================================
247. Input. char of interest: 'm':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def form                                   | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def form

===============================================================================
248. Input. char of interest: 'a':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def forma                                  | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def forma

===============================================================================
249. Input. char of interest: 't':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format                                 | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format

===============================================================================
250. Input. char of interest: '_':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_                                | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_

===============================================================================
251. Input. char of interest: 'a':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a                               | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a

===============================================================================
252. Input. char of interest: '_':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_

===============================================================================
253. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_s                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_s

===============================================================================
254. Input. char of interest: 't':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_st                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_st

===============================================================================
255. Input. char of interest: 'r':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_str                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_str

===============================================================================
256. Input. char of interest: 'i':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_stri                          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_stri

===============================================================================
257. Input. char of interest: 'n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_strin                         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_strin

===============================================================================
258. Input. char of interest: 'g':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string                        | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string

===============================================================================
259. Input. char of interest: '(':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(                       | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(

===============================================================================
260. Input. char of interest: 'a':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(a                      | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(a

===============================================================================
261. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(as                     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(as

===============================================================================
262. Input. char of interest: 't':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(ast                    | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(ast

===============================================================================
263. Input. char of interest: 'r':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astr                   | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astr

===============================================================================
264. Input. char of interest: 'i':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astri                  | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astri

===============================================================================
265. Input. char of interest: 'n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astrin                 | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astrin

===============================================================================
266. Input. char of interest: 'g':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring                | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring

===============================================================================
267. Input. char of interest: ':':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring:               | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring:

===============================================================================
269. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: s             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: s

===============================================================================
270. Input. char of interest: 't':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: st            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: st

===============================================================================
271. Input. char of interest: 'r':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: str           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str

===============================================================================
272. Input. char of interest: ')':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: str)          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str)

===============================================================================
274. Input. char of interest: '-':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: str) -        | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str) -

===============================================================================
275. Input. char of interest: '>':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: str) ->       | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str) ->

===============================================================================
277. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    (ba, bb) = tmp                         |     (ba, bb) = tmp                         
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: str) -> s     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str) -> s

===============================================================================
278. Input. char of interest: 't':

Input:                                      | ERRPY Recovered AST:                        
--------------------------------------------| --------------------------------------------
def fib(a: int) -> int:                     | def fib(a: int) -> int:                     
    tmp = (a, a)                            |     tmp = (a, a)                            
    (ba, bb) = tmp                          |     (ba, bb) = tmp                          
    inset = a in {0, 1}                     |     inset = a in {0, 1}                     
    if a <= 2 or a == 1:                    |     if a <= 2 or a == 1:                    
        return 1                            |         return 1                            
    elif inset:                             |     elif inset:                             
        return 1                            |         return 1                            
    else:                                   |     else:                                   
        return fib(a - 1) + fib(a - 2)      |         return fib(a - 1) + fib(a - 2)      
                                            |                                             
def somethingelse():                        | def somethingelse():                        
    pass                                    |     pass                                    
                                            | 
def format_a_string(astring: str) -> st     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str) -> st

===============================================================================
279. Input. char of interest: 'r':

Input:                                       | ERRPY Recovered AST:                         
---------------------------------------------| ---------------------------------------------
def fib(a: int) -> int:                      | def fib(a: int) -> int:                      
    tmp = (a, a)                             |     tmp = (a, a)                             
    (ba, bb) = tmp                           |     (ba, bb) = tmp                           
    inset = a in {0, 1}                      |     inset = a in {0, 1}                      
    if a <= 2 or a == 1:                     |     if a <= 2 or a == 1:                     
        return 1                             |         return 1                             
    elif inset:                              |     elif inset:                              
        return 1                             |         return 1                             
    else:                                    |     else:                                    
        return fib(a - 1) + fib(a - 2)       |         return fib(a - 1) + fib(a - 2)       
                                             |                                              
def somethingelse():                         | def somethingelse():                         
    pass                                     |     pass                                     
                                             | 
def format_a_string(astring: str) -> str     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str) -> str

===============================================================================
280. Input. char of interest: ':':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
281. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,4 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:


===============================================================================
286. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    r                                         |     r                                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
287. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    re                                        |     re                                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
288. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    ret                                       |     ret                                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
289. Input. char of interest: 'u':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    retu                                      |     retu                                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
290. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    retur                                     |     retur                                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
291. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return                                    |     return                                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
293. Input. char of interest: ''':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return '                                  | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return '

===============================================================================
294. Input. char of interest: ',':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ',                                 | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ',

===============================================================================
295. Input. char of interest: ''':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','                                |     return ','                                


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
296. Input. char of interest: '.':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.                               | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.

===============================================================================
297. Input. char of interest: 'j':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.j                              |     return ','.j                              


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
298. Input. char of interest: 'o':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.jo                             |     return ','.jo                             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
299. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.joi                            |     return ','.joi                            


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
300. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join                           |     return ','.join                           


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
301. Input. char of interest: '(':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       |                                               
    tmp = (a, a)                              | 
    (ba, bb) = tmp                            | 
    inset = a in {0, 1}                       | 
    if a <= 2 or a == 1:                      | 
        return 1                              | 
    elif inset:                               | 
        return 1                              | 
    else:                                     | 
        return fib(a - 1) + fib(a - 2)        | 
                                              | 
def somethingelse():                          | 
    pass                                      | 
                                              | 
def format_a_string(astring: str) -> str:     | 
    return ','.join(                          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,16 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    (ba, bb) = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse():
+    pass
+
+def format_a_string(astring: str) -> str:
+    return ','.join(

===============================================================================
302. Input. char of interest: '[':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       |                                               
    tmp = (a, a)                              | 
    (ba, bb) = tmp                            | 
    inset = a in {0, 1}                       | 
    if a <= 2 or a == 1:                      | 
        return 1                              | 
    elif inset:                               | 
        return 1                              | 
    else:                                     | 
        return fib(a - 1) + fib(a - 2)        | 
                                              | 
def somethingelse():                          | 
    pass                                      | 
                                              | 
def format_a_string(astring: str) -> str:     | 
    return ','.join([                         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,16 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    (ba, bb) = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse():
+    pass
+
+def format_a_string(astring: str) -> str:
+    return ','.join([

===============================================================================
303. Input. char of interest: 'x':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x                        | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x

===============================================================================
305. Input. char of interest: 'f':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x f                      | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x f

===============================================================================
306. Input. char of interest: 'o':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x fo                     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x fo

===============================================================================
307. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for                    | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for

===============================================================================
309. Input. char of interest: 'x':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x                  | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x

===============================================================================
311. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x i                | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x i

===============================================================================
312. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in               | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in

===============================================================================
314. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in a             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in a

===============================================================================
315. Input. char of interest: 's':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in as            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in as

===============================================================================
316. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in ast           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in ast

===============================================================================
317. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astr          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astr

===============================================================================
318. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astri         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astri

===============================================================================
319. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astrin        | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astrin

===============================================================================
320. Input. char of interest: 'g':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring       | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astring

===============================================================================
321. Input. char of interest: ']':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring]      | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astring]

===============================================================================
322. Input. char of interest: ')':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
323. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,4 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])


===============================================================================
324. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,5 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+


===============================================================================
325. Input. char of interest: 'd':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | d                                             
d                                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -14,4 +14,5 @@
 
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
+
 d

===============================================================================
326. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | de                                            
de                                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -14,4 +14,5 @@
 
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
+
 de

===============================================================================
327. Input. char of interest: 'f':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def                                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def

===============================================================================
329. Input. char of interest: 'm':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def m                                         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def m

===============================================================================
330. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def ma                                        | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def ma

===============================================================================
331. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def mai                                       | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def mai

===============================================================================
332. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main                                      | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main

===============================================================================
333. Input. char of interest: '(':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main(                                     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main(

===============================================================================
334. Input. char of interest: ')':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main()                                    | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main()

===============================================================================
336. Input. char of interest: '-':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main() -                                  | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main() -

===============================================================================
337. Input. char of interest: '>':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main() ->                                 | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main() ->

===============================================================================
339. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main() -> i                               | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main() -> i

===============================================================================
340. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main() -> in                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main() -> in

===============================================================================
341. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main() -> int                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main() -> int

===============================================================================
342. Input. char of interest: ':':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
343. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -15,4 +15,4 @@
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
 
-def main() -> int:+def main() -> int:


===============================================================================
348. Input. char of interest: '"':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    "                                         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -15,4 +15,5 @@
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
 
-def main() -> int:+def main() -> int:
+    "

===============================================================================
349. Input. char of interest: '"':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    ""                                        |     """"""                                    


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    """"""+    ""

===============================================================================
350. Input. char of interest: '"':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """                                       | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -15,4 +15,5 @@
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
 
-def main() -> int:+def main() -> int:
+    """

===============================================================================
351. Input. char of interest: 'D':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """D                                      |     D                                         


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    D+    """D

===============================================================================
352. Input. char of interest: 'O':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DO                                     |     DO                                        


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DO+    """DO

===============================================================================
353. Input. char of interest: 'C':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC                                    |     DOC                                       


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC+    """DOC

===============================================================================
354. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_                                   |     DOC_                                      


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_+    """DOC_

===============================================================================
355. Input. char of interest: 'S':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_S                                  |     DOC_S                                     


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_S+    """DOC_S

===============================================================================
356. Input. char of interest: 'T':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_ST                                 |     DOC_ST                                    


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_ST+    """DOC_ST

===============================================================================
357. Input. char of interest: 'R':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STR                                |     DOC_STR                                   


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_STR+    """DOC_STR

===============================================================================
358. Input. char of interest: 'I':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRI                               |     DOC_STRI                                  


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_STRI+    """DOC_STRI

===============================================================================
359. Input. char of interest: 'N':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRIN                              |     DOC_STRIN                                 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_STRIN+    """DOC_STRIN

===============================================================================
360. Input. char of interest: 'G':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING                             |     DOC_STRING                                


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_STRING+    """DOC_STRING

===============================================================================
361. Input. char of interest: '"':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -15,4 +15,5 @@
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
 
-def main() -> int:+def main() -> int:
+    """DOC_STRING"

===============================================================================
362. Input. char of interest: '"':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING""                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -15,4 +15,5 @@
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
 
-def main() -> int:+def main() -> int:
+    """DOC_STRING""

===============================================================================
363. Input. char of interest: '"':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
364. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    """DOC_STRING"""+    """DOC_STRING"""


===============================================================================
369. Input. char of interest: 's':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    s                                         |     s                                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
370. Input. char of interest: 'o':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    so                                        |     so                                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
371. Input. char of interest: 'm':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    som                                       |     som                                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
372. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    some                                      |     some                                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
373. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somet                                     |     somet                                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
374. Input. char of interest: 'h':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    someth                                    |     someth                                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
375. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethi                                   |     somethi                                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
376. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethin                                  |     somethin                                  


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
377. Input. char of interest: 'g':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    something                                 |     something                                 


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
378. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethinge                                |     somethinge                                


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
379. Input. char of interest: 'l':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingel                               |     somethingel                               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
380. Input. char of interest: 's':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingels                              |     somethingels                              


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
381. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse                             |     somethingelse                             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
382. Input. char of interest: '(':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       |                                               
    tmp = (a, a)                              | 
    (ba, bb) = tmp                            | 
    inset = a in {0, 1}                       | 
    if a <= 2 or a == 1:                      | 
        return 1                              | 
    elif inset:                               | 
        return 1                              | 
    else:                                     | 
        return fib(a - 1) + fib(a - 2)        | 
                                              | 
def somethingelse():                          | 
    pass                                      | 
                                              | 
def format_a_string(astring: str) -> str:     | 
    return ','.join([x for x in astring])     | 
                                              | 
def main() -> int:                            | 
    """DOC_STRING"""                          | 
    somethingelse(                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,20 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    (ba, bb) = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse():
+    pass
+
+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astring])
+
+def main() -> int:
+    """DOC_STRING"""
+    somethingelse(

===============================================================================
383. Input. char of interest: ')':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
384. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -17,4 +17,4 @@
 
 def main() -> int:
     """DOC_STRING"""
-    somethingelse()+    somethingelse()


===============================================================================
389. Input. char of interest: 'f':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    f                                         |     f                                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
390. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fi                                        |     fi                                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
391. Input. char of interest: 'b':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib                                       |     fib                                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
392. Input. char of interest: '(':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       |                                               
    tmp = (a, a)                              | 
    (ba, bb) = tmp                            | 
    inset = a in {0, 1}                       | 
    if a <= 2 or a == 1:                      | 
        return 1                              | 
    elif inset:                               | 
        return 1                              | 
    else:                                     | 
        return fib(a - 1) + fib(a - 2)        | 
                                              | 
def somethingelse():                          | 
    pass                                      | 
                                              | 
def format_a_string(astring: str) -> str:     | 
    return ','.join([x for x in astring])     | 
                                              | 
def main() -> int:                            | 
    """DOC_STRING"""                          | 
    somethingelse()                           | 
    fib(                                      | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,21 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    (ba, bb) = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse():
+    pass
+
+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astring])
+
+def main() -> int:
+    """DOC_STRING"""
+    somethingelse()
+    fib(

===============================================================================
393. Input. char of interest: '1':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(1                                     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -17,4 +17,5 @@
 
 def main() -> int:
     """DOC_STRING"""
-    somethingelse()+    somethingelse()
+    fib(1

===============================================================================
394. Input. char of interest: '2':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12                                    | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -17,4 +17,5 @@
 
 def main() -> int:
     """DOC_STRING"""
-    somethingelse()+    somethingelse()
+    fib(12

===============================================================================
395. Input. char of interest: ')':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
396. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -18,4 +18,4 @@
 def main() -> int:
     """DOC_STRING"""
     somethingelse()
-    fib(12)+    fib(12)


===============================================================================
401. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    a                                         |     a                                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
402. Input. char of interest: 's':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    as                                        |     as                                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
403. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    ast                                       |     ast                                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
404. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astr                                      |     astr                                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
405. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astri                                     |     astri                                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
406. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astrin                                    |     astrin                                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
407. Input. char of interest: 'g':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring                                   |     astring                                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
409. Input. char of interest: '=':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring =                                 | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -18,4 +18,5 @@
 def main() -> int:
     """DOC_STRING"""
     somethingelse()
-    fib(12)+    fib(12)
+    astring =

===============================================================================
411. Input. char of interest: 'f':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = f                               |     astring = f                               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
412. Input. char of interest: 'o':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = fo                              |     astring = fo                              


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
413. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = for                             |     astring = for                             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
414. Input. char of interest: 'm':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = form                            |     astring = form                            


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
415. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = forma                           |     astring = forma                           


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
416. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format                          |     astring = format                          


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
417. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_                         |     astring = format_                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
418. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a                        |     astring = format_a                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
419. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_                       |     astring = format_a_                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
420. Input. char of interest: 's':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_s                      |     astring = format_a_s                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
421. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_st                     |     astring = format_a_st                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
422. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_str                    |     astring = format_a_str                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
423. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_stri                   |     astring = format_a_stri                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
424. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_strin                  |     astring = format_a_strin                  


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
425. Input. char of interest: 'g':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string                 |     astring = format_a_string                 


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
426. Input. char of interest: '(':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       |                                               
    tmp = (a, a)                              | 
    (ba, bb) = tmp                            | 
    inset = a in {0, 1}                       | 
    if a <= 2 or a == 1:                      | 
        return 1                              | 
    elif inset:                               | 
        return 1                              | 
    else:                                     | 
        return fib(a - 1) + fib(a - 2)        | 
                                              | 
def somethingelse():                          | 
    pass                                      | 
                                              | 
def format_a_string(astring: str) -> str:     | 
    return ','.join([x for x in astring])     | 
                                              | 
def main() -> int:                            | 
    """DOC_STRING"""                          | 
    somethingelse()                           | 
    fib(12)                                   | 
    astring = format_a_string(                | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,22 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    (ba, bb) = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse():
+    pass
+
+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astring])
+
+def main() -> int:
+    """DOC_STRING"""
+    somethingelse()
+    fib(12)
+    astring = format_a_string(

===============================================================================
427. Input. char of interest: ')':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
428. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -19,4 +19,4 @@
     """DOC_STRING"""
     somethingelse()
     fib(12)
-    astring = format_a_string()+    astring = format_a_string()


===============================================================================
433. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    r                                         |     r                                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
434. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    re                                        |     re                                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
435. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    ret                                       |     ret                                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
436. Input. char of interest: 'u':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    retu                                      |     retu                                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
437. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    retur                                     |     retur                                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
438. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return                                    |     return                                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
440. Input. char of interest: '0':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
441. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,4 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0


===============================================================================
442. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
i                                             | i                                             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
443. Input. char of interest: 'f':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if                                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if

===============================================================================
445. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if _                                          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if _

===============================================================================
446. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __                                         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __

===============================================================================
447. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __n                                        | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __n

===============================================================================
448. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __na                                       | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __na

===============================================================================
449. Input. char of interest: 'm':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __nam                                      | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __nam

===============================================================================
450. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name                                     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name

===============================================================================
451. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name_                                    | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name_

===============================================================================
452. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__                                   | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__

===============================================================================
454. Input. char of interest: '=':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ =                                 | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ =

===============================================================================
455. Input. char of interest: '=':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ ==                                | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ ==

===============================================================================
457. Input. char of interest: ''':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '

===============================================================================
458. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '_                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '_

===============================================================================
459. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__

===============================================================================
460. Input. char of interest: 'm':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__m                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__m

===============================================================================
461. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__ma                          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__ma

===============================================================================
462. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__mai                         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__mai

===============================================================================
463. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main                        | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__main

===============================================================================
464. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main_                       | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__main_

===============================================================================
465. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__                      | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__main__

===============================================================================
466. Input. char of interest: ''':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__'                     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__main__'

===============================================================================
467. Input. char of interest: ':':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
468. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -21,4 +21,4 @@
     fib(12)
     astring = format_a_string()
     return 0
-if __name__ == '__main__':+if __name__ == '__main__':


===============================================================================
473. Input. char of interest: 'm':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
    m                                         |     m                                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
474. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
    ma                                        |     ma                                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
475. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
    mai                                       |     mai                                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
476. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
    main                                      |     main                                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
477. Input. char of interest: '(':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       |                                               
    tmp = (a, a)                              | 
    (ba, bb) = tmp                            | 
    inset = a in {0, 1}                       | 
    if a <= 2 or a == 1:                      | 
        return 1                              | 
    elif inset:                               | 
        return 1                              | 
    else:                                     | 
        return fib(a - 1) + fib(a - 2)        | 
                                              | 
def somethingelse():                          | 
    pass                                      | 
                                              | 
def format_a_string(astring: str) -> str:     | 
    return ','.join([x for x in astring])     | 
                                              | 
def main() -> int:                            | 
    """DOC_STRING"""                          | 
    somethingelse()                           | 
    fib(12)                                   | 
    astring = format_a_string()               | 
    return 0                                  | 
if __name__ == '__main__':                    | 
    main(                                     | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,25 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    (ba, bb) = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse():
+    pass
+
+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astring])
+
+def main() -> int:
+    """DOC_STRING"""
+    somethingelse()
+    fib(12)
+    astring = format_a_string()
+    return 0
+if __name__ == '__main__':
+    main(

===============================================================================
478. Input. char of interest: ')':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
    main()                                    |     main()                                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
479. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    (ba, bb) = tmp                            |     (ba, bb) = tmp                            
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
    main()                                    |     main()                                    
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -22,4 +22,4 @@
     astring = format_a_string()
     return 0
 if __name__ == '__main__':
-    main()+    main()


===============================================================================
