@generated

Errpy makes empty AST (weird) with input prior to and including:
2.->def<-

4.->def f<-

5.->def fi<-

6.->def fib<-

7.->def fib(<-

8.->def fib(a<-

9.->def fib(a:<-

11.->def fib(a: i<-

12.->def fib(a: in<-

13.->def fib(a: int<-

14.->def fib(a: int)<-

16.->def fib(a: int) -<-

17.->def fib(a: int) -><-

19.->def fib(a: int) -> i<-

20.->def fib(a: int) -> in<-

21.->def fib(a: int) -> int<-

34.->ib(a: int) -> int:
    tmp = (<-

36.->(a: int) -> int:
    tmp = (a,<-

75.->a, bb = tmp
    inset = a in {<-

77.-> bb = tmp
    inset = a in {0,<-

185.->
    else:
        return fib(<-

198.->      return fib(a - 1) + fib(<-

299.->) -> str:
    return ','.join(<-

300.-> -> str:
    return ','.join([<-

380.->C_STRING"""
    somethingelse(<-

390.->"
    somethingelse()
    fib(<-

424.->    astring = format_a_string(<-

475.->ame__ == '__main__':
    main(<-
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

0. Input. char of interest: 'd':

Input:| ERRPY 
------| ------
d     | d     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
1. Input. char of interest: 'e':

Input: | ERRPY R
-------| -------
de     | de     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
2. Input. char of interest: 'f':

Input:  | ERRPY Re
--------| --------
def     |         

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:4]
CST Stack:
    {Node ERROR (0, 0) - (0, 3)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def

===============================================================================
4. Input. char of interest: 'f':

Input:    | ERRPY Reco
----------| ----------
def f     |           

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:6]
CST Stack:
    {Node ERROR (0, 0) - (0, 5)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def f

===============================================================================
5. Input. char of interest: 'i':

Input:     | ERRPY Recov
-----------| -----------
def fi     |            

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:7]
CST Stack:
    {Node ERROR (0, 0) - (0, 6)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fi

===============================================================================
6. Input. char of interest: 'b':

Input:      | ERRPY Recove
------------| ------------
def fib     |             

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:8]
CST Stack:
    {Node ERROR (0, 0) - (0, 7)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib

===============================================================================
7. Input. char of interest: '(':

Input:       | ERRPY Recover
-------------| -------------
def fib(     |              

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:9]
CST Stack:
    {Node ERROR (0, 0) - (0, 8)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(

===============================================================================
8. Input. char of interest: 'a':

Input:        | ERRPY Recovere
--------------| --------------
def fib(a     |               

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:10]
CST Stack:
    {Node ERROR (0, 0) - (0, 9)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a

===============================================================================
9. Input. char of interest: ':':

Input:         | ERRPY Recovered
---------------| ---------------
def fib(a:     |                

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:11]
CST Stack:
    {Node ERROR (0, 0) - (0, 10)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a:

===============================================================================
11. Input. char of interest: 'i':

Input:           | ERRPY Recovered A
-----------------| -----------------
def fib(a: i     |                  

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:13]
CST Stack:
    {Node ERROR (0, 0) - (0, 12)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: i

===============================================================================
12. Input. char of interest: 'n':

Input:            | ERRPY Recovered AS
------------------| ------------------
def fib(a: in     |                   

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:14]
CST Stack:
    {Node ERROR (0, 0) - (0, 13)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: in

===============================================================================
13. Input. char of interest: 't':

Input:             | ERRPY Recovered AST
-------------------| -------------------
def fib(a: int     |                    

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:15]
CST Stack:
    {Node ERROR (0, 0) - (0, 14)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int

===============================================================================
14. Input. char of interest: ')':

Input:              | ERRPY Recovered AST:
--------------------| --------------------
def fib(a: int)     |                     

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:16]
CST Stack:
    {Node ERROR (0, 0) - (0, 15)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int)

===============================================================================
16. Input. char of interest: '-':

Input:                | ERRPY Recovered AST:  
----------------------| ----------------------
def fib(a: int) -     |                       

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:18]
CST Stack:
    {Node ERROR (0, 0) - (0, 17)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int) -

===============================================================================
17. Input. char of interest: '>':

Input:                 | ERRPY Recovered AST:   
-----------------------| -----------------------
def fib(a: int) ->     |                        

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:19]
CST Stack:
    {Node ERROR (0, 0) - (0, 18)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int) ->

===============================================================================
19. Input. char of interest: 'i':

Input:                   | ERRPY Recovered AST:     
-------------------------| -------------------------
def fib(a: int) -> i     |                          

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:21]
CST Stack:
    {Node ERROR (0, 0) - (0, 20)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int) -> i

===============================================================================
20. Input. char of interest: 'n':

Input:                    | ERRPY Recovered AST:      
--------------------------| --------------------------
def fib(a: int) -> in     |                           

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:22]
CST Stack:
    {Node ERROR (0, 0) - (0, 21)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int) -> in

===============================================================================
21. Input. char of interest: 't':

Input:                     | ERRPY Recovered AST:       
---------------------------| ---------------------------
def fib(a: int) -> int     |                            

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 1:23]
CST Stack:
    {Node ERROR (0, 0) - (0, 22)}
    {Node module (0, 0) - (1, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1 @@
+def fib(a: int) -> int

===============================================================================
22. Input. char of interest: ':':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     

Output AST is not valid according to CPython: expected an indented block after function definition on line 1 (<unknown>, line 1)
ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
23. Input. char of interest: '\n':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
                            | 

Output AST is not valid according to CPython: expected an indented block after function definition on line 1 (<unknown>, line 1)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -1 +1 @@
-def fib(a: int) -> int:+def fib(a: int) -> int:


===============================================================================
28. Input. char of interest: 't':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    t                       |     t                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
29. Input. char of interest: 'm':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tm                      |     tm                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
30. Input. char of interest: 'p':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp                     |     tmp                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
32. Input. char of interest: '=':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp =                   | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [2:5 - 2:10]
CST Stack:
    {Node ERROR (1, 4) - (1, 9)}
    {Node function_definition (0, 0) - (1, 9)}
    {Node module (0, 0) - (2, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 1 (<unknown>, line 1)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -1 +1,2 @@
-def fib(a: int) -> int:+def fib(a: int) -> int:
+    tmp =

===============================================================================
34. Input. char of interest: '(':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     |                             
    tmp = (                 | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 3:1]
CST Stack:
    {Node ERROR (0, 0) - (2, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,2 @@
+def fib(a: int) -> int:
+    tmp = (

===============================================================================
35. Input. char of interest: 'a':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a                | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [2:5 - 2:13]
CST Stack:
    {Node ERROR (1, 4) - (1, 12)}
    {Node function_definition (0, 0) - (1, 12)}
    {Node module (0, 0) - (2, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 1 (<unknown>, line 1)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -1 +1,2 @@
-def fib(a: int) -> int:+def fib(a: int) -> int:
+    tmp = (a

===============================================================================
36. Input. char of interest: ',':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     |                             
    tmp = (a,               | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 3:1]
CST Stack:
    {Node ERROR (0, 0) - (2, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,2 @@
+def fib(a: int) -> int:
+    tmp = (a,

===============================================================================
38. Input. char of interest: 'a':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a             | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [2:5 - 2:16]
CST Stack:
    {Node ERROR (1, 4) - (1, 15)}
    {Node function_definition (0, 0) - (1, 15)}
    {Node module (0, 0) - (2, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 1 (<unknown>, line 1)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -1 +1,2 @@
-def fib(a: int) -> int:+def fib(a: int) -> int:
+    tmp = (a, a

===============================================================================
39. Input. char of interest: ')':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
40. Input. char of interest: '\n':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,2 +1,2 @@
 def fib(a: int) -> int:
-    tmp = (a, a)+    tmp = (a, a)


===============================================================================
45. Input. char of interest: 'b':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    b                       |     b                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
46. Input. char of interest: 'a':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba                      |     ba                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
47. Input. char of interest: ',':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba,                     |     (ba,)                   


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,3 +1,3 @@
 def fib(a: int) -> int:
     tmp = (a, a)
-    (ba,)+    ba,

===============================================================================
49. Input. char of interest: 'b':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, b                   |     (ba, b)                 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,3 +1,3 @@
 def fib(a: int) -> int:
     tmp = (a, a)
-    (ba, b)+    ba, b

===============================================================================
50. Input. char of interest: 'b':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb                  |     (ba, bb)                


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,3 +1,3 @@
 def fib(a: int) -> int:
     tmp = (a, a)
-    (ba, bb)+    ba, bb

===============================================================================
52. Input. char of interest: '=':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb =                | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [3:5 - 3:13]
CST Stack:
    {Node ERROR (2, 4) - (2, 12)}
    {Node block (1, 4) - (2, 12)}
    {Node function_definition (0, 0) - (2, 12)}
    {Node module (0, 0) - (3, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,2 +1,3 @@
 def fib(a: int) -> int:
-    tmp = (a, a)+    tmp = (a, a)
+    ba, bb =

===============================================================================
54. Input. char of interest: 't':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = t              |     ba, bb = t              


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
55. Input. char of interest: 'm':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tm             |     ba, bb = tm             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
56. Input. char of interest: 'p':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
57. Input. char of interest: '\n':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,3 +1,3 @@
 def fib(a: int) -> int:
     tmp = (a, a)
-    ba, bb = tmp+    ba, bb = tmp


===============================================================================
62. Input. char of interest: 'i':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    i                       |     i                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
63. Input. char of interest: 'n':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    in                      |     in                      

1 Recoverable error detected:
SyntaxError: keyword: "in" cannot be used as identifier at [4:5 - 4:7]
CST Stack:
    {Node identifier (3, 4) - (3, 6)}
    {Node expression_statement (3, 4) - (3, 6)}
    {Node block (1, 4) - (3, 6)}
    {Node function_definition (0, 0) - (3, 6)}
    {Node module (0, 0) - (4, 0)}
Output AST is not valid according to CPython: invalid syntax (<unknown>, line 4)
ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
64. Input. char of interest: 's':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    ins                     |     ins                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
65. Input. char of interest: 'e':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inse                    |     inse                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
66. Input. char of interest: 't':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset                   |     inset                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
68. Input. char of interest: '=':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset =                 | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [4:5 - 4:12]
CST Stack:
    {Node ERROR (3, 4) - (3, 11)}
    {Node block (1, 4) - (3, 11)}
    {Node function_definition (0, 0) - (3, 11)}
    {Node module (0, 0) - (4, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,3 +1,4 @@
 def fib(a: int) -> int:
     tmp = (a, a)
-    ba, bb = tmp+    ba, bb = tmp
+    inset =

===============================================================================
70. Input. char of interest: 'a':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a               |     inset = a               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
72. Input. char of interest: 'i':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a i             |     inset = i               

1 Recoverable error detected:
SyntaxError: invalid syntax at [4:13 - 4:14]
CST Stack:
    {Node ERROR (3, 12) - (3, 13)}
    {Node assignment (3, 4) - (3, 15)}
    {Node expression_statement (3, 4) - (3, 15)}
    {Node block (1, 4) - (3, 15)}
    {Node function_definition (0, 0) - (3, 15)}
    {Node module (0, 0) - (4, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,4 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     ba, bb = tmp
-    inset = i+    inset = a i

===============================================================================
73. Input. char of interest: 'n':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in            | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [4:5 - 4:17]
CST Stack:
    {Node ERROR (3, 4) - (3, 16)}
    {Node block (1, 4) - (3, 16)}
    {Node function_definition (0, 0) - (3, 16)}
    {Node module (0, 0) - (4, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,3 +1,4 @@
 def fib(a: int) -> int:
     tmp = (a, a)
-    ba, bb = tmp+    ba, bb = tmp
+    inset = a in

===============================================================================
75. Input. char of interest: '{':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     |                             
    tmp = (a, a)            | 
    ba, bb = tmp            | 
    inset = a in {          | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 5:1]
CST Stack:
    {Node ERROR (0, 0) - (4, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,4 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    ba, bb = tmp
+    inset = a in {

===============================================================================
76. Input. char of interest: '0':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0         | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [4:5 - 4:20]
CST Stack:
    {Node ERROR (3, 4) - (3, 19)}
    {Node block (1, 4) - (3, 19)}
    {Node function_definition (0, 0) - (3, 19)}
    {Node module (0, 0) - (4, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,3 +1,4 @@
 def fib(a: int) -> int:
     tmp = (a, a)
-    ba, bb = tmp+    ba, bb = tmp
+    inset = a in {0

===============================================================================
77. Input. char of interest: ',':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     |                             
    tmp = (a, a)            | 
    ba, bb = tmp            | 
    inset = a in {0,        | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 5:1]
CST Stack:
    {Node ERROR (0, 0) - (4, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,4 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    ba, bb = tmp
+    inset = a in {0,

===============================================================================
79. Input. char of interest: '1':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1      | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [4:5 - 4:23]
CST Stack:
    {Node ERROR (3, 4) - (3, 22)}
    {Node block (1, 4) - (3, 22)}
    {Node function_definition (0, 0) - (3, 22)}
    {Node module (0, 0) - (4, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,3 +1,4 @@
 def fib(a: int) -> int:
     tmp = (a, a)
-    ba, bb = tmp+    ba, bb = tmp
+    inset = a in {0, 1

===============================================================================
80. Input. char of interest: '}':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
81. Input. char of interest: '\n':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     
                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,4 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     ba, bb = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}


===============================================================================
86. Input. char of interest: 'i':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    i                       |     i                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
87. Input. char of interest: 'f':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if                      | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [5:5 - 5:7]
CST Stack:
    {Node ERROR (4, 4) - (4, 6)}
    {Node block (1, 4) - (4, 6)}
    {Node function_definition (0, 0) - (4, 6)}
    {Node module (0, 0) - (5, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     ba, bb = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if

===============================================================================
89. Input. char of interest: 'a':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a                    | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [5:5 - 5:9]
CST Stack:
    {Node ERROR (4, 4) - (4, 8)}
    {Node block (1, 4) - (4, 8)}
    {Node function_definition (0, 0) - (4, 8)}
    {Node module (0, 0) - (5, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     ba, bb = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a

===============================================================================
91. Input. char of interest: '<':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <                  | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [5:5 - 5:11]
CST Stack:
    {Node ERROR (4, 4) - (4, 10)}
    {Node block (1, 4) - (4, 10)}
    {Node function_definition (0, 0) - (4, 10)}
    {Node module (0, 0) - (5, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     ba, bb = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <

===============================================================================
92. Input. char of interest: '=':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <=                 | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [5:5 - 5:12]
CST Stack:
    {Node ERROR (4, 4) - (4, 11)}
    {Node block (1, 4) - (4, 11)}
    {Node function_definition (0, 0) - (4, 11)}
    {Node module (0, 0) - (5, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     ba, bb = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <=

===============================================================================
94. Input. char of interest: '2':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2               | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [5:5 - 5:14]
CST Stack:
    {Node ERROR (4, 4) - (4, 13)}
    {Node block (1, 4) - (4, 13)}
    {Node function_definition (0, 0) - (4, 13)}
    {Node module (0, 0) - (5, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     ba, bb = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2

===============================================================================
96. Input. char of interest: 'o':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2 o             | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [5:5 - 5:16]
CST Stack:
    {Node ERROR (4, 4) - (4, 15)}
    {Node block (1, 4) - (4, 15)}
    {Node function_definition (0, 0) - (4, 15)}
    {Node module (0, 0) - (5, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     ba, bb = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2 o

===============================================================================
97. Input. char of interest: 'r':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2 or            | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [5:5 - 5:17]
CST Stack:
    {Node ERROR (4, 4) - (4, 16)}
    {Node block (1, 4) - (4, 16)}
    {Node function_definition (0, 0) - (4, 16)}
    {Node module (0, 0) - (5, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     ba, bb = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2 or

===============================================================================
99. Input. char of interest: 'a':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2 or a          | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [5:5 - 5:19]
CST Stack:
    {Node ERROR (4, 4) - (4, 18)}
    {Node block (1, 4) - (4, 18)}
    {Node function_definition (0, 0) - (4, 18)}
    {Node module (0, 0) - (5, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     ba, bb = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2 or a

===============================================================================
101. Input. char of interest: '=':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2 or a =        | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [5:5 - 5:21]
CST Stack:
    {Node ERROR (4, 4) - (4, 20)}
    {Node block (1, 4) - (4, 20)}
    {Node function_definition (0, 0) - (4, 20)}
    {Node module (0, 0) - (5, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     ba, bb = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2 or a =

===============================================================================
102. Input. char of interest: '=':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2 or a ==       | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [5:5 - 5:22]
CST Stack:
    {Node ERROR (4, 4) - (4, 21)}
    {Node block (1, 4) - (4, 21)}
    {Node function_definition (0, 0) - (4, 21)}
    {Node module (0, 0) - (5, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     ba, bb = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2 or a ==

===============================================================================
104. Input. char of interest: '1':

Input:                      | ERRPY Recovered AST:        
----------------------------| ----------------------------
def fib(a: int) -> int:     | def fib(a: int) -> int:     
    tmp = (a, a)            |     tmp = (a, a)            
    ba, bb = tmp            |     ba, bb = tmp            
    inset = a in {0, 1}     |     inset = a in {0, 1}     
    if a <= 2 or a == 1     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [5:5 - 5:24]
CST Stack:
    {Node ERROR (4, 4) - (4, 23)}
    {Node block (1, 4) - (4, 23)}
    {Node function_definition (0, 0) - (4, 23)}
    {Node module (0, 0) - (5, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -1,4 +1,5 @@
 def fib(a: int) -> int:
     tmp = (a, a)
     ba, bb = tmp
-    inset = a in {0, 1}+    inset = a in {0, 1}
+    if a <= 2 or a == 1

===============================================================================
105. Input. char of interest: ':':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     

Output AST is not valid according to CPython: expected an indented block after 'if' statement on line 5 (<unknown>, line 5)
ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
106. Input. char of interest: '\n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
                             | 

Output AST is not valid according to CPython: expected an indented block after 'if' statement on line 5 (<unknown>, line 5)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -2,4 +2,4 @@
     tmp = (a, a)
     ba, bb = tmp
     inset = a in {0, 1}
-    if a <= 2 or a == 1:+    if a <= 2 or a == 1:


===============================================================================
115. Input. char of interest: 'r':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        r                    |         r                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
116. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        re                   |         re                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
117. Input. char of interest: 't':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        ret                  |         ret                  


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
118. Input. char of interest: 'u':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        retu                 |         retu                 


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
119. Input. char of interest: 'r':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        retur                |         retur                


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
120. Input. char of interest: 'n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return               |         return               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
122. Input. char of interest: '1':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
123. Input. char of interest: '\n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,4 @@
     ba, bb = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1


===============================================================================
128. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    e                        |     e                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
129. Input. char of interest: 'l':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    el                       |     el                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
130. Input. char of interest: 'i':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    eli                      |     eli                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
131. Input. char of interest: 'f':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif                     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [7:5 - 7:9]
CST Stack:
    {Node ERROR (6, 4) - (6, 8)}
    {Node block (1, 4) - (6, 8)}
    {Node function_definition (0, 0) - (6, 8)}
    {Node module (0, 0) - (7, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,5 @@
     ba, bb = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1
+    elif

===============================================================================
133. Input. char of interest: 'i':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif i                   | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [7:5 - 7:11]
CST Stack:
    {Node ERROR (6, 4) - (6, 10)}
    {Node block (1, 4) - (6, 10)}
    {Node function_definition (0, 0) - (6, 10)}
    {Node module (0, 0) - (7, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,5 @@
     ba, bb = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1
+    elif i

===============================================================================
134. Input. char of interest: 'n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif in                  | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [7:5 - 7:12]
CST Stack:
    {Node ERROR (6, 4) - (6, 11)}
    {Node block (1, 4) - (6, 11)}
    {Node function_definition (0, 0) - (6, 11)}
    {Node module (0, 0) - (7, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,5 @@
     ba, bb = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1
+    elif in

===============================================================================
135. Input. char of interest: 's':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif ins                 | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [7:5 - 7:13]
CST Stack:
    {Node ERROR (6, 4) - (6, 12)}
    {Node block (1, 4) - (6, 12)}
    {Node function_definition (0, 0) - (6, 12)}
    {Node module (0, 0) - (7, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,5 @@
     ba, bb = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1
+    elif ins

===============================================================================
136. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inse                | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [7:5 - 7:14]
CST Stack:
    {Node ERROR (6, 4) - (6, 13)}
    {Node block (1, 4) - (6, 13)}
    {Node function_definition (0, 0) - (6, 13)}
    {Node module (0, 0) - (7, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,5 @@
     ba, bb = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1
+    elif inse

===============================================================================
137. Input. char of interest: 't':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset               | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [7:5 - 7:15]
CST Stack:
    {Node ERROR (6, 4) - (6, 14)}
    {Node block (1, 4) - (6, 14)}
    {Node function_definition (0, 0) - (6, 14)}
    {Node module (0, 0) - (7, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -3,4 +3,5 @@
     ba, bb = tmp
     inset = a in {0, 1}
     if a <= 2 or a == 1:
-        return 1+        return 1
+    elif inset

===============================================================================
138. Input. char of interest: ':':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              

Output AST is not valid according to CPython: expected an indented block after 'elif' statement on line 7 (<unknown>, line 7)
ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
139. Input. char of interest: '\n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
                             | 

Output AST is not valid according to CPython: expected an indented block after 'elif' statement on line 7 (<unknown>, line 7)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -4,4 +4,4 @@
     inset = a in {0, 1}
     if a <= 2 or a == 1:
         return 1
-    elif inset:+    elif inset:


===============================================================================
148. Input. char of interest: 'r':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        r                    |         r                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
149. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        re                   |         re                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
150. Input. char of interest: 't':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        ret                  |         ret                  


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
151. Input. char of interest: 'u':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        retu                 |         retu                 


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
152. Input. char of interest: 'r':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        retur                |         retur                


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
153. Input. char of interest: 'n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return               |         return               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
155. Input. char of interest: '1':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
156. Input. char of interest: '\n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,4 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1


===============================================================================
161. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    e                        |     e                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
162. Input. char of interest: 'l':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    el                       |     el                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
163. Input. char of interest: 's':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    els                      |     els                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
164. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else                     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [9:5 - 9:9]
CST Stack:
    {Node ERROR (8, 4) - (8, 8)}
    {Node block (1, 4) - (8, 8)}
    {Node function_definition (0, 0) - (8, 8)}
    {Node module (0, 0) - (9, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,5 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else

===============================================================================
165. Input. char of interest: ':':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,5 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:

===============================================================================
166. Input. char of interest: '\n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    | 
                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,5 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:


===============================================================================
175. Input. char of interest: 'r':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        r                    |         r                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
176. Input. char of interest: 'e':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        re                   |         re                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
177. Input. char of interest: 't':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        ret                  |         ret                  


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
178. Input. char of interest: 'u':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        retu                 |         retu                 


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
179. Input. char of interest: 'r':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        retur                |         retur                


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
180. Input. char of interest: 'n':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        return               |         return               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
182. Input. char of interest: 'f':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        return f             |         return f             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
183. Input. char of interest: 'i':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        return fi            |         return fi            


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
184. Input. char of interest: 'b':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    |     else:                    
        return fib           |         return fib           


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
185. Input. char of interest: '(':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      |                              
    tmp = (a, a)             | 
    ba, bb = tmp             | 
    inset = a in {0, 1}      | 
    if a <= 2 or a == 1:     | 
        return 1             | 
    elif inset:              | 
        return 1             | 
    else:                    | 
        return fib(          | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 11:1]
CST Stack:
    {Node ERROR (0, 0) - (10, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,10 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    ba, bb = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(

===============================================================================
186. Input. char of interest: 'a':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    | 
        return fib(a         | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [10:9 - 10:21]
CST Stack:
    {Node ERROR (9, 8) - (9, 20)}
    {Node else_clause (8, 4) - (9, 20)}
    {Node if_statement (4, 4) - (9, 20)}
    {Node block (1, 4) - (9, 20)}
    {Node function_definition (0, 0) - (9, 20)}
    {Node module (0, 0) - (10, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a

===============================================================================
188. Input. char of interest: '-':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    | 
        return fib(a -       | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [10:9 - 10:23]
CST Stack:
    {Node ERROR (9, 8) - (9, 22)}
    {Node else_clause (8, 4) - (9, 22)}
    {Node if_statement (4, 4) - (9, 22)}
    {Node block (1, 4) - (9, 22)}
    {Node function_definition (0, 0) - (9, 22)}
    {Node module (0, 0) - (10, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a -

===============================================================================
190. Input. char of interest: '1':

Input:                       | ERRPY Recovered AST:         
-----------------------------| -----------------------------
def fib(a: int) -> int:      | def fib(a: int) -> int:      
    tmp = (a, a)             |     tmp = (a, a)             
    ba, bb = tmp             |     ba, bb = tmp             
    inset = a in {0, 1}      |     inset = a in {0, 1}      
    if a <= 2 or a == 1:     |     if a <= 2 or a == 1:     
        return 1             |         return 1             
    elif inset:              |     elif inset:              
        return 1             |         return 1             
    else:                    | 
        return fib(a - 1     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [10:9 - 10:25]
CST Stack:
    {Node ERROR (9, 8) - (9, 24)}
    {Node else_clause (8, 4) - (9, 24)}
    {Node if_statement (4, 4) - (9, 24)}
    {Node block (1, 4) - (9, 24)}
    {Node function_definition (0, 0) - (9, 24)}
    {Node module (0, 0) - (10, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a - 1

===============================================================================
191. Input. char of interest: ')':

Input:                        | ERRPY Recovered AST:          
------------------------------| ------------------------------
def fib(a: int) -> int:       | def fib(a: int) -> int:       
    tmp = (a, a)              |     tmp = (a, a)              
    ba, bb = tmp              |     ba, bb = tmp              
    inset = a in {0, 1}       |     inset = a in {0, 1}       
    if a <= 2 or a == 1:      |     if a <= 2 or a == 1:      
        return 1              |         return 1              
    elif inset:               |     elif inset:               
        return 1              |         return 1              
    else:                     |     else:                     
        return fib(a - 1)     |         return fib(a - 1)     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
193. Input. char of interest: '+':

Input:                          | ERRPY Recovered AST:            
--------------------------------| --------------------------------
def fib(a: int) -> int:         | def fib(a: int) -> int:         
    tmp = (a, a)                |     tmp = (a, a)                
    ba, bb = tmp                |     ba, bb = tmp                
    inset = a in {0, 1}         |     inset = a in {0, 1}         
    if a <= 2 or a == 1:        |     if a <= 2 or a == 1:        
        return 1                |         return 1                
    elif inset:                 |     elif inset:                 
        return 1                |         return 1                
    else:                       | 
        return fib(a - 1) +     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [10:9 - 10:28]
CST Stack:
    {Node ERROR (9, 8) - (9, 27)}
    {Node else_clause (8, 4) - (9, 27)}
    {Node if_statement (4, 4) - (9, 27)}
    {Node block (1, 4) - (9, 27)}
    {Node function_definition (0, 0) - (9, 27)}
    {Node module (0, 0) - (10, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a - 1) +

===============================================================================
195. Input. char of interest: 'f':

Input:                            | ERRPY Recovered AST:              
----------------------------------| ----------------------------------
def fib(a: int) -> int:           | def fib(a: int) -> int:           
    tmp = (a, a)                  |     tmp = (a, a)                  
    ba, bb = tmp                  |     ba, bb = tmp                  
    inset = a in {0, 1}           |     inset = a in {0, 1}           
    if a <= 2 or a == 1:          |     if a <= 2 or a == 1:          
        return 1                  |         return 1                  
    elif inset:                   |     elif inset:                   
        return 1                  |         return 1                  
    else:                         |     else:                         
        return fib(a - 1) + f     |         return fib(a - 1) + f     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
196. Input. char of interest: 'i':

Input:                             | ERRPY Recovered AST:               
-----------------------------------| -----------------------------------
def fib(a: int) -> int:            | def fib(a: int) -> int:            
    tmp = (a, a)                   |     tmp = (a, a)                   
    ba, bb = tmp                   |     ba, bb = tmp                   
    inset = a in {0, 1}            |     inset = a in {0, 1}            
    if a <= 2 or a == 1:           |     if a <= 2 or a == 1:           
        return 1                   |         return 1                   
    elif inset:                    |     elif inset:                    
        return 1                   |         return 1                   
    else:                          |     else:                          
        return fib(a - 1) + fi     |         return fib(a - 1) + fi     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
197. Input. char of interest: 'b':

Input:                              | ERRPY Recovered AST:                
------------------------------------| ------------------------------------
def fib(a: int) -> int:             | def fib(a: int) -> int:             
    tmp = (a, a)                    |     tmp = (a, a)                    
    ba, bb = tmp                    |     ba, bb = tmp                    
    inset = a in {0, 1}             |     inset = a in {0, 1}             
    if a <= 2 or a == 1:            |     if a <= 2 or a == 1:            
        return 1                    |         return 1                    
    elif inset:                     |     elif inset:                     
        return 1                    |         return 1                    
    else:                           |     else:                           
        return fib(a - 1) + fib     |         return fib(a - 1) + fib     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
198. Input. char of interest: '(':

Input:                               | ERRPY Recovered AST:                 
-------------------------------------| -------------------------------------
def fib(a: int) -> int:              |                                      
    tmp = (a, a)                     | 
    ba, bb = tmp                     | 
    inset = a in {0, 1}              | 
    if a <= 2 or a == 1:             | 
        return 1                     | 
    elif inset:                      | 
        return 1                     | 
    else:                            | 
        return fib(a - 1) + fib(     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 11:1]
CST Stack:
    {Node ERROR (0, 0) - (10, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,10 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    ba, bb = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(

===============================================================================
199. Input. char of interest: 'a':

Input:                                | ERRPY Recovered AST:                  
--------------------------------------| --------------------------------------
def fib(a: int) -> int:               | def fib(a: int) -> int:               
    tmp = (a, a)                      |     tmp = (a, a)                      
    ba, bb = tmp                      |     ba, bb = tmp                      
    inset = a in {0, 1}               |     inset = a in {0, 1}               
    if a <= 2 or a == 1:              |     if a <= 2 or a == 1:              
        return 1                      |         return 1                      
    elif inset:                       |     elif inset:                       
        return 1                      |         return 1                      
    else:                             | 
        return fib(a - 1) + fib(a     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [10:9 - 10:34]
CST Stack:
    {Node ERROR (9, 8) - (9, 33)}
    {Node else_clause (8, 4) - (9, 33)}
    {Node if_statement (4, 4) - (9, 33)}
    {Node block (1, 4) - (9, 33)}
    {Node function_definition (0, 0) - (9, 33)}
    {Node module (0, 0) - (10, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a - 1) + fib(a

===============================================================================
201. Input. char of interest: '-':

Input:                                  | ERRPY Recovered AST:                    
----------------------------------------| ----------------------------------------
def fib(a: int) -> int:                 | def fib(a: int) -> int:                 
    tmp = (a, a)                        |     tmp = (a, a)                        
    ba, bb = tmp                        |     ba, bb = tmp                        
    inset = a in {0, 1}                 |     inset = a in {0, 1}                 
    if a <= 2 or a == 1:                |     if a <= 2 or a == 1:                
        return 1                        |         return 1                        
    elif inset:                         |     elif inset:                         
        return 1                        |         return 1                        
    else:                               | 
        return fib(a - 1) + fib(a -     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [10:9 - 10:36]
CST Stack:
    {Node ERROR (9, 8) - (9, 35)}
    {Node else_clause (8, 4) - (9, 35)}
    {Node if_statement (4, 4) - (9, 35)}
    {Node block (1, 4) - (9, 35)}
    {Node function_definition (0, 0) - (9, 35)}
    {Node module (0, 0) - (10, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a - 1) + fib(a -

===============================================================================
203. Input. char of interest: '2':

Input:                                    | ERRPY Recovered AST:                      
------------------------------------------| ------------------------------------------
def fib(a: int) -> int:                   | def fib(a: int) -> int:                   
    tmp = (a, a)                          |     tmp = (a, a)                          
    ba, bb = tmp                          |     ba, bb = tmp                          
    inset = a in {0, 1}                   |     inset = a in {0, 1}                   
    if a <= 2 or a == 1:                  |     if a <= 2 or a == 1:                  
        return 1                          |         return 1                          
    elif inset:                           |     elif inset:                           
        return 1                          |         return 1                          
    else:                                 | 
        return fib(a - 1) + fib(a - 2     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [10:9 - 10:38]
CST Stack:
    {Node ERROR (9, 8) - (9, 37)}
    {Node else_clause (8, 4) - (9, 37)}
    {Node if_statement (4, 4) - (9, 37)}
    {Node block (1, 4) - (9, 37)}
    {Node function_definition (0, 0) - (9, 37)}
    {Node module (0, 0) - (10, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -5,4 +5,6 @@
     if a <= 2 or a == 1:
         return 1
     elif inset:
-        return 1+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2

===============================================================================
204. Input. char of interest: ')':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
205. Input. char of interest: '\n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,4 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)


===============================================================================
206. Input. char of interest: '\n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
                                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,5 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+


===============================================================================
207. Input. char of interest: 'd':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | d                                          
d                                          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -8,4 +8,5 @@
         return 1
     else:
         return fib(a - 1) + fib(a - 2)
+
 d

===============================================================================
208. Input. char of interest: 'e':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | de                                         
de                                         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -8,4 +8,5 @@
         return 1
     else:
         return fib(a - 1) + fib(a - 2)
+
 de

===============================================================================
209. Input. char of interest: 'f':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def                                        | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:4]
CST Stack:
    {Node ERROR (11, 0) - (11, 3)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def

===============================================================================
211. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def s                                      | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:6]
CST Stack:
    {Node ERROR (11, 0) - (11, 5)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def s

===============================================================================
212. Input. char of interest: 'o':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def so                                     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:7]
CST Stack:
    {Node ERROR (11, 0) - (11, 6)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def so

===============================================================================
213. Input. char of interest: 'm':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def som                                    | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:8]
CST Stack:
    {Node ERROR (11, 0) - (11, 7)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def som

===============================================================================
214. Input. char of interest: 'e':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def some                                   | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:9]
CST Stack:
    {Node ERROR (11, 0) - (11, 8)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def some

===============================================================================
215. Input. char of interest: 't':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somet                                  | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:10]
CST Stack:
    {Node ERROR (11, 0) - (11, 9)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somet

===============================================================================
216. Input. char of interest: 'h':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def someth                                 | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:11]
CST Stack:
    {Node ERROR (11, 0) - (11, 10)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def someth

===============================================================================
217. Input. char of interest: 'i':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethi                                | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:12]
CST Stack:
    {Node ERROR (11, 0) - (11, 11)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethi

===============================================================================
218. Input. char of interest: 'n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethin                               | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:13]
CST Stack:
    {Node ERROR (11, 0) - (11, 12)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethin

===============================================================================
219. Input. char of interest: 'g':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def something                              | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:14]
CST Stack:
    {Node ERROR (11, 0) - (11, 13)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def something

===============================================================================
220. Input. char of interest: 'e':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethinge                             | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:15]
CST Stack:
    {Node ERROR (11, 0) - (11, 14)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethinge

===============================================================================
221. Input. char of interest: 'l':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethingel                            | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:16]
CST Stack:
    {Node ERROR (11, 0) - (11, 15)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethingel

===============================================================================
222. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethingels                           | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:17]
CST Stack:
    {Node ERROR (11, 0) - (11, 16)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethingels

===============================================================================
223. Input. char of interest: 'e':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethingelse                          | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:18]
CST Stack:
    {Node ERROR (11, 0) - (11, 17)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse

===============================================================================
224. Input. char of interest: '(':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethingelse(                         | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:19]
CST Stack:
    {Node ERROR (11, 0) - (11, 18)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse(

===============================================================================
225. Input. char of interest: ')':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           | 
def somethingelse()                        | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [12:1 - 12:20]
CST Stack:
    {Node ERROR (11, 0) - (11, 19)}
    {Node module (0, 0) - (12, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -7,4 +7,6 @@
     elif inset:
         return 1
     else:
-        return fib(a - 1) + fib(a - 2)+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse()

===============================================================================
226. Input. char of interest: ':':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       

Output AST is not valid according to CPython: expected an indented block after function definition on line 12 (<unknown>, line 12)
ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
227. Input. char of interest: '\n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
                                           | 

Output AST is not valid according to CPython: expected an indented block after function definition on line 12 (<unknown>, line 12)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -9,4 +9,4 @@
     else:
         return fib(a - 1) + fib(a - 2)
 
-def somethingelse():+def somethingelse():


===============================================================================
232. Input. char of interest: 'p':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    p                                      |     p                                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
233. Input. char of interest: 'a':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pa                                     |     pa                                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
234. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pas                                    |     pas                                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
235. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
236. Input. char of interest: '\n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,4 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass


===============================================================================
237. Input. char of interest: '\n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
                                           | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,5 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+


===============================================================================
238. Input. char of interest: 'd':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | d                                          
d                                          | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -11,4 +11,5 @@
 
 def somethingelse():
     pass
+
 d

===============================================================================
239. Input. char of interest: 'e':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | de                                         
de                                         | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -11,4 +11,5 @@
 
 def somethingelse():
     pass
+
 de

===============================================================================
240. Input. char of interest: 'f':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def                                        | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:4]
CST Stack:
    {Node ERROR (14, 0) - (14, 3)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def

===============================================================================
242. Input. char of interest: 'f':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def f                                      | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:6]
CST Stack:
    {Node ERROR (14, 0) - (14, 5)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def f

===============================================================================
243. Input. char of interest: 'o':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def fo                                     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:7]
CST Stack:
    {Node ERROR (14, 0) - (14, 6)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def fo

===============================================================================
244. Input. char of interest: 'r':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def for                                    | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:8]
CST Stack:
    {Node ERROR (14, 0) - (14, 7)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def for

===============================================================================
245. Input. char of interest: 'm':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def form                                   | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:9]
CST Stack:
    {Node ERROR (14, 0) - (14, 8)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def form

===============================================================================
246. Input. char of interest: 'a':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def forma                                  | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:10]
CST Stack:
    {Node ERROR (14, 0) - (14, 9)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def forma

===============================================================================
247. Input. char of interest: 't':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format                                 | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:11]
CST Stack:
    {Node ERROR (14, 0) - (14, 10)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format

===============================================================================
248. Input. char of interest: '_':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_                                | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:12]
CST Stack:
    {Node ERROR (14, 0) - (14, 11)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_

===============================================================================
249. Input. char of interest: 'a':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a                               | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:13]
CST Stack:
    {Node ERROR (14, 0) - (14, 12)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a

===============================================================================
250. Input. char of interest: '_':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_                              | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:14]
CST Stack:
    {Node ERROR (14, 0) - (14, 13)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_

===============================================================================
251. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_s                             | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:15]
CST Stack:
    {Node ERROR (14, 0) - (14, 14)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_s

===============================================================================
252. Input. char of interest: 't':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_st                            | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:16]
CST Stack:
    {Node ERROR (14, 0) - (14, 15)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_st

===============================================================================
253. Input. char of interest: 'r':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_str                           | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:17]
CST Stack:
    {Node ERROR (14, 0) - (14, 16)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_str

===============================================================================
254. Input. char of interest: 'i':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_stri                          | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:18]
CST Stack:
    {Node ERROR (14, 0) - (14, 17)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_stri

===============================================================================
255. Input. char of interest: 'n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_strin                         | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:19]
CST Stack:
    {Node ERROR (14, 0) - (14, 18)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_strin

===============================================================================
256. Input. char of interest: 'g':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string                        | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:20]
CST Stack:
    {Node ERROR (14, 0) - (14, 19)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string

===============================================================================
257. Input. char of interest: '(':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(                       | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:21]
CST Stack:
    {Node ERROR (14, 0) - (14, 20)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(

===============================================================================
258. Input. char of interest: 'a':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(a                      | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:22]
CST Stack:
    {Node ERROR (14, 0) - (14, 21)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(a

===============================================================================
259. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(as                     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:23]
CST Stack:
    {Node ERROR (14, 0) - (14, 22)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(as

===============================================================================
260. Input. char of interest: 't':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(ast                    | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:24]
CST Stack:
    {Node ERROR (14, 0) - (14, 23)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(ast

===============================================================================
261. Input. char of interest: 'r':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astr                   | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:25]
CST Stack:
    {Node ERROR (14, 0) - (14, 24)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astr

===============================================================================
262. Input. char of interest: 'i':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astri                  | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:26]
CST Stack:
    {Node ERROR (14, 0) - (14, 25)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astri

===============================================================================
263. Input. char of interest: 'n':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astrin                 | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:27]
CST Stack:
    {Node ERROR (14, 0) - (14, 26)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astrin

===============================================================================
264. Input. char of interest: 'g':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring                | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:28]
CST Stack:
    {Node ERROR (14, 0) - (14, 27)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring

===============================================================================
265. Input. char of interest: ':':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring:               | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:29]
CST Stack:
    {Node ERROR (14, 0) - (14, 28)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring:

===============================================================================
267. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: s             | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:31]
CST Stack:
    {Node ERROR (14, 0) - (14, 30)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: s

===============================================================================
268. Input. char of interest: 't':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: st            | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:32]
CST Stack:
    {Node ERROR (14, 0) - (14, 31)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: st

===============================================================================
269. Input. char of interest: 'r':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: str           | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:33]
CST Stack:
    {Node ERROR (14, 0) - (14, 32)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str

===============================================================================
270. Input. char of interest: ')':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: str)          | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:34]
CST Stack:
    {Node ERROR (14, 0) - (14, 33)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str)

===============================================================================
272. Input. char of interest: '-':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: str) -        | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:36]
CST Stack:
    {Node ERROR (14, 0) - (14, 35)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str) -

===============================================================================
273. Input. char of interest: '>':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: str) ->       | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:37]
CST Stack:
    {Node ERROR (14, 0) - (14, 36)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str) ->

===============================================================================
275. Input. char of interest: 's':

Input:                                     | ERRPY Recovered AST:                       
-------------------------------------------| -------------------------------------------
def fib(a: int) -> int:                    | def fib(a: int) -> int:                    
    tmp = (a, a)                           |     tmp = (a, a)                           
    ba, bb = tmp                           |     ba, bb = tmp                           
    inset = a in {0, 1}                    |     inset = a in {0, 1}                    
    if a <= 2 or a == 1:                   |     if a <= 2 or a == 1:                   
        return 1                           |         return 1                           
    elif inset:                            |     elif inset:                            
        return 1                           |         return 1                           
    else:                                  |     else:                                  
        return fib(a - 1) + fib(a - 2)     |         return fib(a - 1) + fib(a - 2)     
                                           |                                            
def somethingelse():                       | def somethingelse():                       
    pass                                   |     pass                                   
                                           | 
def format_a_string(astring: str) -> s     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:39]
CST Stack:
    {Node ERROR (14, 0) - (14, 38)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str) -> s

===============================================================================
276. Input. char of interest: 't':

Input:                                      | ERRPY Recovered AST:                        
--------------------------------------------| --------------------------------------------
def fib(a: int) -> int:                     | def fib(a: int) -> int:                     
    tmp = (a, a)                            |     tmp = (a, a)                            
    ba, bb = tmp                            |     ba, bb = tmp                            
    inset = a in {0, 1}                     |     inset = a in {0, 1}                     
    if a <= 2 or a == 1:                    |     if a <= 2 or a == 1:                    
        return 1                            |         return 1                            
    elif inset:                             |     elif inset:                             
        return 1                            |         return 1                            
    else:                                   |     else:                                   
        return fib(a - 1) + fib(a - 2)      |         return fib(a - 1) + fib(a - 2)      
                                            |                                             
def somethingelse():                        | def somethingelse():                        
    pass                                    |     pass                                    
                                            | 
def format_a_string(astring: str) -> st     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:40]
CST Stack:
    {Node ERROR (14, 0) - (14, 39)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str) -> st

===============================================================================
277. Input. char of interest: 'r':

Input:                                       | ERRPY Recovered AST:                         
---------------------------------------------| ---------------------------------------------
def fib(a: int) -> int:                      | def fib(a: int) -> int:                      
    tmp = (a, a)                             |     tmp = (a, a)                             
    ba, bb = tmp                             |     ba, bb = tmp                             
    inset = a in {0, 1}                      |     inset = a in {0, 1}                      
    if a <= 2 or a == 1:                     |     if a <= 2 or a == 1:                     
        return 1                             |         return 1                             
    elif inset:                              |     elif inset:                              
        return 1                             |         return 1                             
    else:                                    |     else:                                    
        return fib(a - 1) + fib(a - 2)       |         return fib(a - 1) + fib(a - 2)       
                                             |                                              
def somethingelse():                         | def somethingelse():                         
    pass                                     |     pass                                     
                                             | 
def format_a_string(astring: str) -> str     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [15:1 - 15:41]
CST Stack:
    {Node ERROR (14, 0) - (14, 40)}
    {Node module (0, 0) - (15, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -10,4 +10,6 @@
         return fib(a - 1) + fib(a - 2)
 
 def somethingelse():
-    pass+    pass
+
+def format_a_string(astring: str) -> str

===============================================================================
278. Input. char of interest: ':':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     

Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
279. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
                                              | 

Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,4 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:


===============================================================================
284. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    r                                         |     r                                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
285. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    re                                        |     re                                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
286. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    ret                                       |     ret                                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
287. Input. char of interest: 'u':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    retu                                      |     retu                                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
288. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    retur                                     |     retur                                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
289. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return                                    |     return                                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
291. Input. char of interest: ''':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return '                                  | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:13]
CST Stack:
    {Node ERROR (15, 4) - (15, 12)}
    {Node function_definition (14, 0) - (15, 12)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return '

===============================================================================
292. Input. char of interest: ',':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ',                                 |     return (',)                               

Output AST is not valid according to CPython: unterminated string literal (detected at line 16) (<unknown>, line 16)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,4 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return (',)+    return ',

===============================================================================
293. Input. char of interest: ''':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','                                |     return ','                                


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
294. Input. char of interest: '.':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.                               | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:16]
CST Stack:
    {Node ERROR (15, 4) - (15, 15)}
    {Node function_definition (14, 0) - (15, 15)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.

===============================================================================
295. Input. char of interest: 'j':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.j                              |     return ','.j                              


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
296. Input. char of interest: 'o':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.jo                             |     return ','.jo                             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
297. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.joi                            |     return ','.joi                            


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
298. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join                           |     return ','.join                           


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
299. Input. char of interest: '(':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       |                                               
    tmp = (a, a)                              | 
    ba, bb = tmp                              | 
    inset = a in {0, 1}                       | 
    if a <= 2 or a == 1:                      | 
        return 1                              | 
    elif inset:                               | 
        return 1                              | 
    else:                                     | 
        return fib(a - 1) + fib(a - 2)        | 
                                              | 
def somethingelse():                          | 
    pass                                      | 
                                              | 
def format_a_string(astring: str) -> str:     | 
    return ','.join(                          | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 17:1]
CST Stack:
    {Node ERROR (0, 0) - (16, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,16 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    ba, bb = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse():
+    pass
+
+def format_a_string(astring: str) -> str:
+    return ','.join(

===============================================================================
300. Input. char of interest: '[':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       |                                               
    tmp = (a, a)                              | 
    ba, bb = tmp                              | 
    inset = a in {0, 1}                       | 
    if a <= 2 or a == 1:                      | 
        return 1                              | 
    elif inset:                               | 
        return 1                              | 
    else:                                     | 
        return fib(a - 1) + fib(a - 2)        | 
                                              | 
def somethingelse():                          | 
    pass                                      | 
                                              | 
def format_a_string(astring: str) -> str:     | 
    return ','.join([                         | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 17:1]
CST Stack:
    {Node ERROR (0, 0) - (16, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,16 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    ba, bb = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse():
+    pass
+
+def format_a_string(astring: str) -> str:
+    return ','.join([

===============================================================================
301. Input. char of interest: 'x':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x                        | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:23]
CST Stack:
    {Node ERROR (15, 4) - (15, 22)}
    {Node function_definition (14, 0) - (15, 22)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x

===============================================================================
303. Input. char of interest: 'f':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x f                      | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:25]
CST Stack:
    {Node ERROR (15, 4) - (15, 24)}
    {Node function_definition (14, 0) - (15, 24)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x f

===============================================================================
304. Input. char of interest: 'o':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x fo                     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:26]
CST Stack:
    {Node ERROR (15, 4) - (15, 25)}
    {Node function_definition (14, 0) - (15, 25)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x fo

===============================================================================
305. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for                    | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:27]
CST Stack:
    {Node ERROR (15, 4) - (15, 26)}
    {Node function_definition (14, 0) - (15, 26)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for

===============================================================================
307. Input. char of interest: 'x':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x                  | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:29]
CST Stack:
    {Node ERROR (15, 4) - (15, 28)}
    {Node function_definition (14, 0) - (15, 28)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x

===============================================================================
309. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x i                | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:31]
CST Stack:
    {Node ERROR (15, 4) - (15, 30)}
    {Node function_definition (14, 0) - (15, 30)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x i

===============================================================================
310. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in               | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:32]
CST Stack:
    {Node ERROR (15, 4) - (15, 31)}
    {Node function_definition (14, 0) - (15, 31)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in

===============================================================================
312. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in a             | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:34]
CST Stack:
    {Node ERROR (15, 4) - (15, 33)}
    {Node function_definition (14, 0) - (15, 33)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in a

===============================================================================
313. Input. char of interest: 's':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in as            | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:35]
CST Stack:
    {Node ERROR (15, 4) - (15, 34)}
    {Node function_definition (14, 0) - (15, 34)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in as

===============================================================================
314. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in ast           | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:36]
CST Stack:
    {Node ERROR (15, 4) - (15, 35)}
    {Node function_definition (14, 0) - (15, 35)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in ast

===============================================================================
315. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astr          | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:37]
CST Stack:
    {Node ERROR (15, 4) - (15, 36)}
    {Node function_definition (14, 0) - (15, 36)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astr

===============================================================================
316. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astri         | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:38]
CST Stack:
    {Node ERROR (15, 4) - (15, 37)}
    {Node function_definition (14, 0) - (15, 37)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astri

===============================================================================
317. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astrin        | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:39]
CST Stack:
    {Node ERROR (15, 4) - (15, 38)}
    {Node function_definition (14, 0) - (15, 38)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astrin

===============================================================================
318. Input. char of interest: 'g':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring       | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:40]
CST Stack:
    {Node ERROR (15, 4) - (15, 39)}
    {Node function_definition (14, 0) - (15, 39)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astring

===============================================================================
319. Input. char of interest: ']':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring]      | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [16:5 - 16:41]
CST Stack:
    {Node ERROR (15, 4) - (15, 40)}
    {Node function_definition (14, 0) - (15, 40)}
    {Node module (0, 0) - (16, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 15 (<unknown>, line 15)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -12,4 +12,5 @@
 def somethingelse():
     pass
 
-def format_a_string(astring: str) -> str:+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astring]

===============================================================================
320. Input. char of interest: ')':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
321. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,4 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])


===============================================================================
322. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,5 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+


===============================================================================
323. Input. char of interest: 'd':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | d                                             
d                                             | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -14,4 +14,5 @@
 
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
+
 d

===============================================================================
324. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | de                                            
de                                            | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -14,4 +14,5 @@
 
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
+
 de

===============================================================================
325. Input. char of interest: 'f':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def                                           | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [18:1 - 18:4]
CST Stack:
    {Node ERROR (17, 0) - (17, 3)}
    {Node module (0, 0) - (18, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def

===============================================================================
327. Input. char of interest: 'm':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def m                                         | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [18:1 - 18:6]
CST Stack:
    {Node ERROR (17, 0) - (17, 5)}
    {Node module (0, 0) - (18, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def m

===============================================================================
328. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def ma                                        | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [18:1 - 18:7]
CST Stack:
    {Node ERROR (17, 0) - (17, 6)}
    {Node module (0, 0) - (18, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def ma

===============================================================================
329. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def mai                                       | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [18:1 - 18:8]
CST Stack:
    {Node ERROR (17, 0) - (17, 7)}
    {Node module (0, 0) - (18, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def mai

===============================================================================
330. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main                                      | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [18:1 - 18:9]
CST Stack:
    {Node ERROR (17, 0) - (17, 8)}
    {Node module (0, 0) - (18, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main

===============================================================================
331. Input. char of interest: '(':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main(                                     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [18:1 - 18:10]
CST Stack:
    {Node ERROR (17, 0) - (17, 9)}
    {Node module (0, 0) - (18, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main(

===============================================================================
332. Input. char of interest: ')':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main()                                    | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [18:1 - 18:11]
CST Stack:
    {Node ERROR (17, 0) - (17, 10)}
    {Node module (0, 0) - (18, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main()

===============================================================================
334. Input. char of interest: '-':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main() -                                  | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [18:1 - 18:13]
CST Stack:
    {Node ERROR (17, 0) - (17, 12)}
    {Node module (0, 0) - (18, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main() -

===============================================================================
335. Input. char of interest: '>':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main() ->                                 | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [18:1 - 18:14]
CST Stack:
    {Node ERROR (17, 0) - (17, 13)}
    {Node module (0, 0) - (18, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main() ->

===============================================================================
337. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main() -> i                               | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [18:1 - 18:16]
CST Stack:
    {Node ERROR (17, 0) - (17, 15)}
    {Node module (0, 0) - (18, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main() -> i

===============================================================================
338. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main() -> in                              | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [18:1 - 18:17]
CST Stack:
    {Node ERROR (17, 0) - (17, 16)}
    {Node module (0, 0) - (18, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main() -> in

===============================================================================
339. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              | 
def main() -> int                             | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [18:1 - 18:18]
CST Stack:
    {Node ERROR (17, 0) - (17, 17)}
    {Node module (0, 0) - (18, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -13,4 +13,6 @@
     pass
 
 def format_a_string(astring: str) -> str:
-    return ','.join([x for x in astring])+    return ','.join([x for x in astring])
+
+def main() -> int

===============================================================================
340. Input. char of interest: ':':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            

Output AST is not valid according to CPython: expected an indented block after function definition on line 18 (<unknown>, line 18)
ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
341. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
                                              | 

Output AST is not valid according to CPython: expected an indented block after function definition on line 18 (<unknown>, line 18)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -15,4 +15,4 @@
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
 
-def main() -> int:+def main() -> int:


===============================================================================
346. Input. char of interest: '"':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    "                                         | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:6]
CST Stack:
    {Node ERROR (18, 4) - (18, 5)}
    {Node function_definition (17, 0) - (18, 5)}
    {Node module (0, 0) - (19, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 18 (<unknown>, line 18)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -15,4 +15,5 @@
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
 
-def main() -> int:+def main() -> int:
+    "

===============================================================================
347. Input. char of interest: '"':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    ""                                        |     """"""                                    


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    """"""+    ""

===============================================================================
348. Input. char of interest: '"':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """                                       | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:8]
CST Stack:
    {Node ERROR (18, 4) - (18, 7)}
    {Node function_definition (17, 0) - (18, 7)}
    {Node module (0, 0) - (19, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 18 (<unknown>, line 18)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -15,4 +15,5 @@
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
 
-def main() -> int:+def main() -> int:
+    """

===============================================================================
349. Input. char of interest: 'D':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """D                                      |     D                                         

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:8]
CST Stack:
    {Node ERROR (18, 4) - (18, 7)}
    {Node function_definition (17, 0) - (18, 8)}
    {Node module (0, 0) - (19, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    D+    """D

===============================================================================
350. Input. char of interest: 'O':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DO                                     |     DO                                        

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:8]
CST Stack:
    {Node ERROR (18, 4) - (18, 7)}
    {Node function_definition (17, 0) - (18, 9)}
    {Node module (0, 0) - (19, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DO+    """DO

===============================================================================
351. Input. char of interest: 'C':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC                                    |     DOC                                       

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:8]
CST Stack:
    {Node ERROR (18, 4) - (18, 7)}
    {Node function_definition (17, 0) - (18, 10)}
    {Node module (0, 0) - (19, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC+    """DOC

===============================================================================
352. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_                                   |     DOC_                                      

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:8]
CST Stack:
    {Node ERROR (18, 4) - (18, 7)}
    {Node function_definition (17, 0) - (18, 11)}
    {Node module (0, 0) - (19, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_+    """DOC_

===============================================================================
353. Input. char of interest: 'S':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_S                                  |     DOC_S                                     

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:8]
CST Stack:
    {Node ERROR (18, 4) - (18, 7)}
    {Node function_definition (17, 0) - (18, 12)}
    {Node module (0, 0) - (19, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_S+    """DOC_S

===============================================================================
354. Input. char of interest: 'T':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_ST                                 |     DOC_ST                                    

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:8]
CST Stack:
    {Node ERROR (18, 4) - (18, 7)}
    {Node function_definition (17, 0) - (18, 13)}
    {Node module (0, 0) - (19, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_ST+    """DOC_ST

===============================================================================
355. Input. char of interest: 'R':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STR                                |     DOC_STR                                   

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:8]
CST Stack:
    {Node ERROR (18, 4) - (18, 7)}
    {Node function_definition (17, 0) - (18, 14)}
    {Node module (0, 0) - (19, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_STR+    """DOC_STR

===============================================================================
356. Input. char of interest: 'I':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRI                               |     DOC_STRI                                  

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:8]
CST Stack:
    {Node ERROR (18, 4) - (18, 7)}
    {Node function_definition (17, 0) - (18, 15)}
    {Node module (0, 0) - (19, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_STRI+    """DOC_STRI

===============================================================================
357. Input. char of interest: 'N':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRIN                              |     DOC_STRIN                                 

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:8]
CST Stack:
    {Node ERROR (18, 4) - (18, 7)}
    {Node function_definition (17, 0) - (18, 16)}
    {Node module (0, 0) - (19, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_STRIN+    """DOC_STRIN

===============================================================================
358. Input. char of interest: 'G':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING                             |     DOC_STRING                                

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:8]
CST Stack:
    {Node ERROR (18, 4) - (18, 7)}
    {Node function_definition (17, 0) - (18, 17)}
    {Node module (0, 0) - (19, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    DOC_STRING+    """DOC_STRING

===============================================================================
359. Input. char of interest: '"':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"                            | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:19]
CST Stack:
    {Node ERROR (18, 4) - (18, 18)}
    {Node function_definition (17, 0) - (18, 18)}
    {Node module (0, 0) - (19, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 18 (<unknown>, line 18)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -15,4 +15,5 @@
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
 
-def main() -> int:+def main() -> int:
+    """DOC_STRING"

===============================================================================
360. Input. char of interest: '"':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING""                           | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [19:5 - 19:20]
CST Stack:
    {Node ERROR (18, 4) - (18, 19)}
    {Node function_definition (17, 0) - (18, 19)}
    {Node module (0, 0) - (19, 0)}
Output AST is not valid according to CPython: expected an indented block after function definition on line 18 (<unknown>, line 18)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -15,4 +15,5 @@
 def format_a_string(astring: str) -> str:
     return ','.join([x for x in astring])
 
-def main() -> int:+def main() -> int:
+    """DOC_STRING""

===============================================================================
361. Input. char of interest: '"':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
362. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -16,4 +16,4 @@
     return ','.join([x for x in astring])
 
 def main() -> int:
-    """DOC_STRING"""+    """DOC_STRING"""


===============================================================================
367. Input. char of interest: 's':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    s                                         |     s                                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
368. Input. char of interest: 'o':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    so                                        |     so                                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
369. Input. char of interest: 'm':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    som                                       |     som                                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
370. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    some                                      |     some                                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
371. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somet                                     |     somet                                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
372. Input. char of interest: 'h':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    someth                                    |     someth                                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
373. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethi                                   |     somethi                                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
374. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethin                                  |     somethin                                  


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
375. Input. char of interest: 'g':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    something                                 |     something                                 


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
376. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethinge                                |     somethinge                                


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
377. Input. char of interest: 'l':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingel                               |     somethingel                               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
378. Input. char of interest: 's':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingels                              |     somethingels                              


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
379. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse                             |     somethingelse                             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
380. Input. char of interest: '(':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       |                                               
    tmp = (a, a)                              | 
    ba, bb = tmp                              | 
    inset = a in {0, 1}                       | 
    if a <= 2 or a == 1:                      | 
        return 1                              | 
    elif inset:                               | 
        return 1                              | 
    else:                                     | 
        return fib(a - 1) + fib(a - 2)        | 
                                              | 
def somethingelse():                          | 
    pass                                      | 
                                              | 
def format_a_string(astring: str) -> str:     | 
    return ','.join([x for x in astring])     | 
                                              | 
def main() -> int:                            | 
    """DOC_STRING"""                          | 
    somethingelse(                            | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 21:1]
CST Stack:
    {Node ERROR (0, 0) - (20, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,20 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    ba, bb = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse():
+    pass
+
+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astring])
+
+def main() -> int:
+    """DOC_STRING"""
+    somethingelse(

===============================================================================
381. Input. char of interest: ')':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
382. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -17,4 +17,4 @@
 
 def main() -> int:
     """DOC_STRING"""
-    somethingelse()+    somethingelse()


===============================================================================
387. Input. char of interest: 'f':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    f                                         |     f                                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
388. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fi                                        |     fi                                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
389. Input. char of interest: 'b':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib                                       |     fib                                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
390. Input. char of interest: '(':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       |                                               
    tmp = (a, a)                              | 
    ba, bb = tmp                              | 
    inset = a in {0, 1}                       | 
    if a <= 2 or a == 1:                      | 
        return 1                              | 
    elif inset:                               | 
        return 1                              | 
    else:                                     | 
        return fib(a - 1) + fib(a - 2)        | 
                                              | 
def somethingelse():                          | 
    pass                                      | 
                                              | 
def format_a_string(astring: str) -> str:     | 
    return ','.join([x for x in astring])     | 
                                              | 
def main() -> int:                            | 
    """DOC_STRING"""                          | 
    somethingelse()                           | 
    fib(                                      | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 22:1]
CST Stack:
    {Node ERROR (0, 0) - (21, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,21 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    ba, bb = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse():
+    pass
+
+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astring])
+
+def main() -> int:
+    """DOC_STRING"""
+    somethingelse()
+    fib(

===============================================================================
391. Input. char of interest: '1':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(1                                     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [21:5 - 21:10]
CST Stack:
    {Node ERROR (20, 4) - (20, 9)}
    {Node block (18, 4) - (20, 9)}
    {Node function_definition (17, 0) - (20, 9)}
    {Node module (0, 0) - (21, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -17,4 +17,5 @@
 
 def main() -> int:
     """DOC_STRING"""
-    somethingelse()+    somethingelse()
+    fib(1

===============================================================================
392. Input. char of interest: '2':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12                                    | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [21:5 - 21:11]
CST Stack:
    {Node ERROR (20, 4) - (20, 10)}
    {Node block (18, 4) - (20, 10)}
    {Node function_definition (17, 0) - (20, 10)}
    {Node module (0, 0) - (21, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -17,4 +17,5 @@
 
 def main() -> int:
     """DOC_STRING"""
-    somethingelse()+    somethingelse()
+    fib(12

===============================================================================
393. Input. char of interest: ')':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
394. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -18,4 +18,4 @@
 def main() -> int:
     """DOC_STRING"""
     somethingelse()
-    fib(12)+    fib(12)


===============================================================================
399. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    a                                         |     a                                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
400. Input. char of interest: 's':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    as                                        |     as                                        

1 Recoverable error detected:
SyntaxError: keyword: "as" cannot be used as identifier at [22:5 - 22:7]
CST Stack:
    {Node identifier (21, 4) - (21, 6)}
    {Node expression_statement (21, 4) - (21, 6)}
    {Node block (18, 4) - (21, 6)}
    {Node function_definition (17, 0) - (21, 6)}
    {Node module (0, 0) - (22, 0)}
Output AST is not valid according to CPython: invalid syntax (<unknown>, line 22)
ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
401. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    ast                                       |     ast                                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
402. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astr                                      |     astr                                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
403. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astri                                     |     astri                                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
404. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astrin                                    |     astrin                                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
405. Input. char of interest: 'g':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring                                   |     astring                                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
407. Input. char of interest: '=':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring =                                 | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [22:5 - 22:14]
CST Stack:
    {Node ERROR (21, 4) - (21, 13)}
    {Node block (18, 4) - (21, 13)}
    {Node function_definition (17, 0) - (21, 13)}
    {Node module (0, 0) - (22, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -18,4 +18,5 @@
 def main() -> int:
     """DOC_STRING"""
     somethingelse()
-    fib(12)+    fib(12)
+    astring =

===============================================================================
409. Input. char of interest: 'f':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = f                               |     astring = f                               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
410. Input. char of interest: 'o':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = fo                              |     astring = fo                              


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
411. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = for                             |     astring = for                             

1 Recoverable error detected:
SyntaxError: keyword: "for" cannot be used as identifier at [22:15 - 22:18]
CST Stack:
    {Node identifier (21, 14) - (21, 17)}
    {Node assignment (21, 4) - (21, 17)}
    {Node expression_statement (21, 4) - (21, 17)}
    {Node block (18, 4) - (21, 17)}
    {Node function_definition (17, 0) - (21, 17)}
    {Node module (0, 0) - (22, 0)}
Output AST is not valid according to CPython: invalid syntax (<unknown>, line 22)
ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
412. Input. char of interest: 'm':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = form                            |     astring = form                            


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
413. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = forma                           |     astring = forma                           


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
414. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format                          |     astring = format                          


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
415. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_                         |     astring = format_                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
416. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a                        |     astring = format_a                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
417. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_                       |     astring = format_a_                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
418. Input. char of interest: 's':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_s                      |     astring = format_a_s                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
419. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_st                     |     astring = format_a_st                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
420. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_str                    |     astring = format_a_str                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
421. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_stri                   |     astring = format_a_stri                   


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
422. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_strin                  |     astring = format_a_strin                  


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
423. Input. char of interest: 'g':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string                 |     astring = format_a_string                 


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
424. Input. char of interest: '(':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       |                                               
    tmp = (a, a)                              | 
    ba, bb = tmp                              | 
    inset = a in {0, 1}                       | 
    if a <= 2 or a == 1:                      | 
        return 1                              | 
    elif inset:                               | 
        return 1                              | 
    else:                                     | 
        return fib(a - 1) + fib(a - 2)        | 
                                              | 
def somethingelse():                          | 
    pass                                      | 
                                              | 
def format_a_string(astring: str) -> str:     | 
    return ','.join([x for x in astring])     | 
                                              | 
def main() -> int:                            | 
    """DOC_STRING"""                          | 
    somethingelse()                           | 
    fib(12)                                   | 
    astring = format_a_string(                | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 23:1]
CST Stack:
    {Node ERROR (0, 0) - (22, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,22 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    ba, bb = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse():
+    pass
+
+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astring])
+
+def main() -> int:
+    """DOC_STRING"""
+    somethingelse()
+    fib(12)
+    astring = format_a_string(

===============================================================================
425. Input. char of interest: ')':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
426. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -19,4 +19,4 @@
     """DOC_STRING"""
     somethingelse()
     fib(12)
-    astring = format_a_string()+    astring = format_a_string()


===============================================================================
431. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    r                                         |     r                                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
432. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    re                                        |     re                                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
433. Input. char of interest: 't':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    ret                                       |     ret                                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
434. Input. char of interest: 'u':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    retu                                      |     retu                                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
435. Input. char of interest: 'r':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    retur                                     |     retur                                     


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
436. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return                                    |     return                                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
438. Input. char of interest: '0':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
439. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,4 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0


===============================================================================
440. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
i                                             | i                                             


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
441. Input. char of interest: 'f':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if                                            | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:3]
CST Stack:
    {Node ERROR (23, 0) - (23, 2)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if

===============================================================================
443. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if _                                          | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:5]
CST Stack:
    {Node ERROR (23, 0) - (23, 4)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if _

===============================================================================
444. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __                                         | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:6]
CST Stack:
    {Node ERROR (23, 0) - (23, 5)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __

===============================================================================
445. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __n                                        | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:7]
CST Stack:
    {Node ERROR (23, 0) - (23, 6)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __n

===============================================================================
446. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __na                                       | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:8]
CST Stack:
    {Node ERROR (23, 0) - (23, 7)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __na

===============================================================================
447. Input. char of interest: 'm':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __nam                                      | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:9]
CST Stack:
    {Node ERROR (23, 0) - (23, 8)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __nam

===============================================================================
448. Input. char of interest: 'e':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name                                     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:10]
CST Stack:
    {Node ERROR (23, 0) - (23, 9)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name

===============================================================================
449. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name_                                    | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:11]
CST Stack:
    {Node ERROR (23, 0) - (23, 10)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name_

===============================================================================
450. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__                                   | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:12]
CST Stack:
    {Node ERROR (23, 0) - (23, 11)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__

===============================================================================
452. Input. char of interest: '=':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ =                                 | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:14]
CST Stack:
    {Node ERROR (23, 0) - (23, 13)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ =

===============================================================================
453. Input. char of interest: '=':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ ==                                | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:15]
CST Stack:
    {Node ERROR (23, 0) - (23, 14)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ ==

===============================================================================
455. Input. char of interest: ''':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '                              | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:17]
CST Stack:
    {Node ERROR (23, 0) - (23, 16)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '

===============================================================================
456. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '_                             | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:18]
CST Stack:
    {Node ERROR (23, 0) - (23, 17)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '_

===============================================================================
457. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__                            | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:19]
CST Stack:
    {Node ERROR (23, 0) - (23, 18)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__

===============================================================================
458. Input. char of interest: 'm':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__m                           | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:20]
CST Stack:
    {Node ERROR (23, 0) - (23, 19)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__m

===============================================================================
459. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__ma                          | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:21]
CST Stack:
    {Node ERROR (23, 0) - (23, 20)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__ma

===============================================================================
460. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__mai                         | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:22]
CST Stack:
    {Node ERROR (23, 0) - (23, 21)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__mai

===============================================================================
461. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main                        | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:23]
CST Stack:
    {Node ERROR (23, 0) - (23, 22)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__main

===============================================================================
462. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main_                       | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:24]
CST Stack:
    {Node ERROR (23, 0) - (23, 23)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__main_

===============================================================================
463. Input. char of interest: '_':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__                      | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:25]
CST Stack:
    {Node ERROR (23, 0) - (23, 24)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__main__

===============================================================================
464. Input. char of interest: ''':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__'                     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [24:1 - 24:26]
CST Stack:
    {Node ERROR (23, 0) - (23, 25)}
    {Node module (0, 0) - (24, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -20,4 +20,5 @@
     somethingelse()
     fib(12)
     astring = format_a_string()
-    return 0+    return 0
+if __name__ == '__main__'

===============================================================================
465. Input. char of interest: ':':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    

Output AST is not valid according to CPython: expected an indented block after 'if' statement on line 24 (<unknown>, line 24)
ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
466. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
                                              | 

Output AST is not valid according to CPython: expected an indented block after 'if' statement on line 24 (<unknown>, line 24)
ERRPY Recovered AST diff:
--- 
+++ 
@@ -21,4 +21,4 @@
     fib(12)
     astring = format_a_string()
     return 0
-if __name__ == '__main__':+if __name__ == '__main__':


===============================================================================
471. Input. char of interest: 'm':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
    m                                         |     m                                         


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
472. Input. char of interest: 'a':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
    ma                                        |     ma                                        


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
473. Input. char of interest: 'i':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
    mai                                       |     mai                                       


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
474. Input. char of interest: 'n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
    main                                      |     main                                      


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
475. Input. char of interest: '(':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       |                                               
    tmp = (a, a)                              | 
    ba, bb = tmp                              | 
    inset = a in {0, 1}                       | 
    if a <= 2 or a == 1:                      | 
        return 1                              | 
    elif inset:                               | 
        return 1                              | 
    else:                                     | 
        return fib(a - 1) + fib(a - 2)        | 
                                              | 
def somethingelse():                          | 
    pass                                      | 
                                              | 
def format_a_string(astring: str) -> str:     | 
    return ','.join([x for x in astring])     | 
                                              | 
def main() -> int:                            | 
    """DOC_STRING"""                          | 
    somethingelse()                           | 
    fib(12)                                   | 
    astring = format_a_string()               | 
    return 0                                  | 
if __name__ == '__main__':                    | 
    main(                                     | 

1 Recoverable error detected:
SyntaxError: invalid syntax at [1:1 - 26:1]
CST Stack:
    {Node ERROR (0, 0) - (25, 0)}

ERRPY Recovered AST diff:
--- 
+++ 
@@ -0,0 +1,25 @@
+def fib(a: int) -> int:
+    tmp = (a, a)
+    ba, bb = tmp
+    inset = a in {0, 1}
+    if a <= 2 or a == 1:
+        return 1
+    elif inset:
+        return 1
+    else:
+        return fib(a - 1) + fib(a - 2)
+
+def somethingelse():
+    pass
+
+def format_a_string(astring: str) -> str:
+    return ','.join([x for x in astring])
+
+def main() -> int:
+    """DOC_STRING"""
+    somethingelse()
+    fib(12)
+    astring = format_a_string()
+    return 0
+if __name__ == '__main__':
+    main(

===============================================================================
476. Input. char of interest: ')':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
    main()                                    |     main()                                    


ERRPY Recovered AST diff:
No difference - AST matches, fully recovered!

===============================================================================
477. Input. char of interest: '\n':

Input:                                        | ERRPY Recovered AST:                          
----------------------------------------------| ----------------------------------------------
def fib(a: int) -> int:                       | def fib(a: int) -> int:                       
    tmp = (a, a)                              |     tmp = (a, a)                              
    ba, bb = tmp                              |     ba, bb = tmp                              
    inset = a in {0, 1}                       |     inset = a in {0, 1}                       
    if a <= 2 or a == 1:                      |     if a <= 2 or a == 1:                      
        return 1                              |         return 1                              
    elif inset:                               |     elif inset:                               
        return 1                              |         return 1                              
    else:                                     |     else:                                     
        return fib(a - 1) + fib(a - 2)        |         return fib(a - 1) + fib(a - 2)        
                                              |                                               
def somethingelse():                          | def somethingelse():                          
    pass                                      |     pass                                      
                                              |                                               
def format_a_string(astring: str) -> str:     | def format_a_string(astring: str) -> str:     
    return ','.join([x for x in astring])     |     return ','.join([x for x in astring])     
                                              |                                               
def main() -> int:                            | def main() -> int:                            
    """DOC_STRING"""                          |     """DOC_STRING"""                          
    somethingelse()                           |     somethingelse()                           
    fib(12)                                   |     fib(12)                                   
    astring = format_a_string()               |     astring = format_a_string()               
    return 0                                  |     return 0                                  
if __name__ == '__main__':                    | if __name__ == '__main__':                    
    main()                                    |     main()                                    
                                              | 


ERRPY Recovered AST diff:
--- 
+++ 
@@ -22,4 +22,4 @@
     astring = format_a_string()
     return 0
 if __name__ == '__main__':
-    main()+    main()


===============================================================================
